{"version":3,"sources":["ng://@knora/viewer/lib/resource/annotation/annotation.component.ts","ng://@knora/viewer/lib/resource/audio/audio.component.ts","ng://@knora/viewer/lib/resource/collection/collection.component.ts","ng://@knora/viewer/lib/resource/ddd/ddd.component.ts","ng://@knora/viewer/lib/resource/document/document.component.ts","ng://@knora/viewer/lib/resource/link-obj/link-obj.component.ts","ng://@knora/viewer/lib/resource/moving-image/moving-image.component.ts","ng://@knora/viewer/lib/resource/object/object.component.ts","ng://@knora/viewer/lib/resource/region/region.component.ts","null","ng://@knora/viewer/lib/resource/still-image/still-image.component.ts","ng://@knora/viewer/lib/resource/text/text.component.ts","ng://@knora/viewer/lib/property/boolean-value/boolean-value.component.ts","ng://@knora/viewer/lib/property/color-value/color-value.component.ts","ng://@knora/viewer/lib/property/date-value/date-value.component.ts","ng://@knora/viewer/lib/property/decimal-value/decimal-value.component.ts","ng://@knora/viewer/lib/property/external-res-value/external-res-value.component.ts","ng://@knora/viewer/lib/property/geometry-value/geometry-value.component.ts","ng://@knora/viewer/lib/property/geoname-value/geoname-value.component.ts","ng://@knora/viewer/lib/property/integer-value/integer-value.component.ts","ng://@knora/viewer/lib/property/interval-value/interval-value.component.ts","ng://@knora/viewer/lib/property/link-value/link-value.component.ts","ng://@knora/viewer/lib/property/list-value/list-value.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-html/text-value-as-html.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-string/text-value-as-string.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-xml/text-value-as-xml.component.ts","ng://@knora/viewer/lib/property/textfile-value/textfile-value.component.ts","ng://@knora/viewer/lib/property/uri-value/uri-value.component.ts","ng://@knora/viewer/lib/view/compare-view/compare-view.component.ts","ng://@knora/viewer/lib/view/graph-view/graph-view.component.ts","ng://@knora/viewer/lib/view/grid-view/grid-view.component.ts","ng://@knora/viewer/lib/view/list-view/list-view.component.ts","ng://@knora/viewer/lib/view/properties-view/properties-view.component.ts","ng://@knora/viewer/lib/view/resource-view/resource-view.component.ts","ng://@knora/viewer/lib/view/table-view/table-view.component.ts","ng://@knora/viewer/lib/view/kui-view.ts","ng://@knora/viewer/lib/view/search-results/search-results.component.ts","ng://@knora/viewer/lib/viewer.module.ts"],"names":["AnnotationComponent","prototype","ngOnInit","Component","args","selector","template","styles","AudioComponent","CollectionComponent","DddComponent","DocumentComponent","LinkObjComponent","MovingImageComponent","ObjectComponent","RegionComponent","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__values","o","m","Symbol","iterator","i","call","next","length","value","done","ImageRegion","regionResource","this","getGeometries","properties","KnoraConstants","hasGeometry","StillImageRepresentation","stillImageFileValue","regions","GeometryForRegion","geometry","region","StillImageComponent","elementRef","regionHovered","EventEmitter","surfaceOfRectangularRegion","geom","type","console","log","Math","max","points","x","min","y","prepareTileSourcesFromFileValues","imagesToDisplay","imageXOffset","tileSources","imagesToDisplay_1","tslib_1.__values","imagesToDisplay_1_1","image","sipiBasePath","imageServerIIIFBaseURL","imageFilename","width","dimX","height","dimY","push","tileSource","@context","@id","profile","protocol","tiles","scaleFactors","ngOnChanges","changes","isFirstChange","setupViewer","openImages","renderRegions","unhighlightAllRegions","activateRegion","undefined","highlightRegion","ngOnDestroy","viewer","destroy","updateImages","updateRegions","regionIri","activeRegion","activeRegion_1","activeRegion_1_1","setAttribute","reg","_b","_c","viewerContainer","nativeElement","getElementsByClassName","osdOptions","element","sequenceMode","showReferenceStrip","showNavigator","zoomInButton","zoomOutButton","previousButton","nextButton","homeButton","fullPageButton","rotateLeftButton","rotateRightButton","OpenSeadragon","Viewer","addHandler","fullScreen","classList","add","remove","eventSource","svgOverlay","resize","fileValues","images","map","img","clearOverlays","open","_this","aspectRatio","geometries","id","geomForReg","sort","geom1","geom2","geometries_1","geometries_1_1","this_1","createSVGOverlay","label","xOffset","toolTip","svgElement","lineColor","lineWidth","document","createElementNS","addSVGAttributesRectangle","addSVGAttributesPolygon","addSVGAttributesCircle","random","addEventListener","emit","svgTitle","textContent","svgGroup","appendChild","node","pointA","pointB","positionUL","Point2D","positionLR","viewCoordPoints","image2ViewPortCoords","pointsString","createSVGPolygonPointsAttribute","cx","String","cy","radius","sqrt","point","ElementRef","Input","Output","TextComponent","BooleanValueComponent","defineProperty","_booleanValueObj","ColorValueComponent","_colorValueObj","DateValueComponent","_calendar","_era","_dateValueObj","dateOrRange","valueObject","getDateSalsah","DateRangeSalsah","period","dates","getJSDate","start","end","date","precision","Precision","yearPrecision","format","Date","year","toString","era","calendar","monthPrecision","month","dayPrecision","day","error","DecimalValueComponent","_decimalValueObj","ExternalResValueComponent","GeometryValueComponent","_geomValueObj","GeonameValueComponent","IntegerValueComponent","_integerValueObj","IntervalValueComponent","_intervalValueObj","LinkValueComponent","referredResourceClicked","_ontoInfo","_linkValueObj","referredResource","referredResourceIri","refResClicked","ListValueComponent","_listValueObj","TextValueAsHtmlComponent","el","_bindEvents","_htmlValueObj","innerHTML","html","refResourceIri","onClick","targetElement","nodeName","toLowerCase","className","indexOf","SalsahLink","href","bindEvents","window","HostListener","TextValueAsStringComponent","_textStringValueObj","TextValueAsXmlComponent","_xmlValueObj","TextfileValueComponent","_textfileValueObj","UriValueComponent","__uriValueObj","CompareViewComponent","GraphViewComponent","GridViewComponent","ListViewComponent","PropertiesViewComponent","jsonld","require","ResourceViewComponent","_route","_resourceService","_cacheService","_incomingService","iri","routeParams","snapshot","params","getResource","subscribe","result","body","promises","compact","then","compacted","resourceSeq","ConvertJSONLD","createReadResourcesSequenceFromJsonLD","resources","resourceClassIris","getResourceClassesFromJsonLD","getResourceClassDefinitions","resourceClassInfos","ontologyInfo","resource","err","errorMessage","ActivatedRoute","ResourceService","OntologyCacheService","IncomingService","TableViewComponent","KuiView","_searchService","_searchParamsService","_router","processSearchResults","searchResult","ontologyInformation","updateOntologyInformation","concat","isLoading","rerender","showNumberOfAllResults","countQueryResult","numberOfAllResults","numberOfResults","maxOffset","floor","pagingLimit","navigationSubscription","paramMap","searchMode","get","offset","searchQuery","gravsearchGenerator","getSearchParams","generateGravsearchQuery","getResult","unsubscribe","gravsearch","generateGravsearch","navigate","relativeTo","doFullTextSearchCountQueryCountQueryResult","doFullTextSearchReadResourceSequence","doExtendedSearchCountQueryCountQueryResult","doExtendedSearchReadResourceSequence","loadMore","SearchResultsComponent","_super","__extends","__","constructor","create","tslib_1.__extends","SearchService","SearchParamsService","Router","KuiViewerModule","NgModule","imports","CommonModule","KuiCoreModule","KuiActionModule","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatDatepickerModule","MatExpansionModule","MatFormFieldModule","MatInputModule","MatIconModule","MatListModule","MatNativeDateModule","MatSlideToggleModule","MatTabsModule","MatToolbarModule","MatTooltipModule","ReactiveFormsModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-annotation',\n  template: `<p>\n  annotation works!\n</p>\n`,\n  styles: [``]\n})\nexport class AnnotationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-audio',\n  template: `<p>\n  audio works!\n</p>\n`,\n  styles: [``]\n})\nexport class AudioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-collection',\n  template: `<p>\n  collection works!\n</p>\n`,\n  styles: [``]\n})\nexport class CollectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-ddd',\n  template: `<p>\n  ddd works!\n</p>\n`,\n  styles: [``]\n})\nexport class DddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-document',\n  template: `<p>\n  document works!\n</p>\n`,\n  styles: [``]\n})\nexport class DocumentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-link-obj',\n  template: `<p>\n  link-obj works!\n</p>\n`,\n  styles: [``]\n})\nexport class LinkObjComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-moving-image',\n  template: `<p>\n  moving-image works!\n</p>\n`,\n  styles: [``]\n})\nexport class MovingImageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-object',\n  template: `<p>\n  object works!\n</p>`,\n  styles: [``]\n})\nexport class ObjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-region',\n  template: `<p>\n  region works!\n</p>\n`,\n  styles: [``]\n})\nexport class RegionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChange\n} from '@angular/core';\nimport {\n    KnoraConstants,\n    Point2D,\n    ReadGeomValue,\n    ReadResource,\n    ReadStillImageFileValue,\n    RegionGeometry\n} from '@knora/core';\n\n\n// This component needs the openseadragon library itself, as well as the openseadragon plugin openseadragon-svg-overlay\n// Both libraries are installed via package.json, and loaded globally via the script tag in .angular-cli.json\n\n// OpenSeadragon does not export itself as ES6/ECMA2015 module,\n// it is loaded globally in scripts tag of angular-cli.json,\n// we still need to declare the namespace to make TypeScript compiler happy.\ndeclare let OpenSeadragon: any;\n\n/**\n * Represents a region.\n * Contains a reference to the resource representing the region and its geometries.\n */\nexport class ImageRegion {\n\n    /**\n     *\n     * @param regionResource a resource of type Region\n     */\n    constructor(readonly regionResource: ReadResource) {\n\n    }\n\n    /**\n     * Get all geometry information belonging to this region.\n     *\n     * @returns\n     */\n    getGeometries() {\n        return this.regionResource.properties[KnoraConstants.hasGeometry] as ReadGeomValue[];\n    }\n}\n\n/**\n * Represents an image including its regions.\n */\nexport class StillImageRepresentation {\n\n    /**\n     *\n     * @param stillImageFileValue a [[ReadStillImageFileValue]] representing an image.\n     * @param regions the regions belonging to the image.\n     */\n    constructor(readonly stillImageFileValue: ReadStillImageFileValue, readonly regions: ImageRegion[]) {\n\n    }\n\n}\n\n/**\n * Represents a geometry belonging to a specific region.\n */\nexport class GeometryForRegion {\n\n    /**\n     *\n     * @param geometry the geometrical information.\n     * @param region the region the geometry belongs to.\n     */\n    constructor(readonly geometry: RegionGeometry, readonly region: ReadResource) {\n    }\n\n}\n\n/**\n * Collection of `SVGPolygonElement` for individual regions.\n */\ninterface PolygonsForRegion {\n\n    [key: string]: SVGPolygonElement[];\n\n}\n\n/**\n * This component creates a OpenSeadragon viewer instance.\n * Accepts an array of ReadResource containing (among other resources) ReadStillImageFileValues to be rendered.\n * @member resources - resources containing (among other resources) the StillImageFileValues and incoming regions to be rendered. (Use as angular @Input data binding property.)\n */\n@Component({\n    selector: 'kui-still-image',\n    template: `<div class=\"still-image-viewer\">\n    <div class=\"navigation left\">\n        <button mat-button class=\"full-size\" id=\"KUI_OSD_PREV_PAGE\">\n            <mat-icon>keyboard_arrow_left</mat-icon>\n        </button>\n    </div>\n\n    <!-- main content with navigation and osd viewer -->\n    <div class=\"content\">\n\n        <!-- header with image tools -->\n        <mat-toolbar class=\"header\">\n            <mat-toolbar-row>\n                <!-- home button -->\n                <span>\n                <button mat-icon-button id=\"KUI_OSD_HOME\"><mat-icon>home</mat-icon></button>\n            </span>\n                <!-- zoom buttons -->\n                <span class=\"fill-remaining-space\"></span>\n                <span>\n                <button mat-icon-button id=\"KUI_OSD_ZOOM_IN\"><mat-icon>add</mat-icon></button>\n                <button mat-icon-button id=\"KUI_OSD_ZOOM_OUT\"><mat-icon>remove</mat-icon></button>\n            </span>\n                <!-- window button -->\n                <span class=\"fill-remaining-space\"></span>\n                <span>\n                <button mat-icon-button id=\"KUI_OSD_FULL_PAGE\"><mat-icon>fullscreen</mat-icon></button>\n            </span>\n            </mat-toolbar-row>\n        </mat-toolbar>\n\n        <!-- openseadragon (osd) viewer -->\n        <div class=\"osd-container\"></div>\n        <!-- /openseadragon (osd) -->\n        <!-- footer for copyright info; download button etc. -->\n        <div class=\"footer\">\n            <p class=\"mat-caption\" [innerHtml]=\"imageCaption\"></p>\n        </div>\n\n    </div>\n\n    <div class=\"navigation right\">\n        <button mat-button class=\"full-size\" id=\"KUI_OSD_NEXT_PAGE\">\n            <mat-icon>keyboard_arrow_right</mat-icon>\n        </button>\n    </div>\n\n</div>\n\n<!-- simple image viewer e.g. as a preview -->\n<!-- TODO: handle images array -->\n<!--<img *ngIf=\"simple && images?.length === 1; else osdViewer\" [src]=\"simpleImageExample\">-->\n\n\n<!--\n    <div>\n        <span *ngIf=\"images.length > 1\" (click)=\"gotoLeft()\">&lt;&lt;</span>\n        <span *ngIf=\"images.length > 1\" (click)=\"gotoRight()\">&gt;&gt;</span>\n    </div>\n-->\n\n\n\n`,\n    styles: [`.still-image-viewer{display:inline-flex;height:400px;max-width:800px;width:100%}@media (max-height:636px){.still-image-viewer{height:300px}}.still-image-viewer .navigation{height:calc(400px + 64px + 24px);width:36px}.still-image-viewer .navigation .mat-button.full-size{height:100%!important;width:36px!important;padding:0!important;min-width:36px!important}.still-image-viewer .content{height:calc(400px + 64px + 24px);max-width:calc(800px - (2 * 36px));width:calc(100% - (2 * 36px))}.still-image-viewer .content .osd-container{color:#ccc;background-color:#000;height:400px}.still-image-viewer .content .osd-container.fullscreen{max-width:100vw}.still-image-viewer .content .footer p{color:#ccc;background-color:#000;height:24px;margin:0;padding:0 16px}/deep/ .roi-svgoverlay{opacity:.4;fill:transparent;stroke:#00695c;stroke-width:2px;vector-effect:non-scaling-stroke}.roi-svgoverlay:focus,/deep/ .roi-svgoverlay:hover{opacity:1}/deep/ .roi-svgoverlay.active{opacity:1}`]\n})\nexport class StillImageComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input() images: StillImageRepresentation[];\n    @Input() imageCaption?: string;\n    @Input() activateRegion: string; // highlight a region\n\n    @Output() regionHovered = new EventEmitter<string>();\n\n    private viewer;\n    private regions: PolygonsForRegion = {};\n\n    /**\n     * Calculates the surface of a rectangular region.\n     *\n     * @param geom the region's geometry.\n     * @returns the surface.\n     */\n    private static surfaceOfRectangularRegion(geom: RegionGeometry): number {\n\n        if (geom.type !== 'rectangle') {\n            console.log('expected rectangular region, but ' + geom.type + ' given');\n            return 0;\n        }\n\n        const w = Math.max(geom.points[0].x, geom.points[1].x) - Math.min(geom.points[0].x, geom.points[1].x);\n        const h = Math.max(geom.points[0].y, geom.points[1].y) - Math.min(geom.points[0].y, geom.points[1].y);\n\n        return w * h;\n\n    }\n\n    /**\n     * Prepare tile sources from the given sequence of [[ReadStillImageFileValue]].\n     *\n     * @param imagesToDisplay the given file values to de displayed.\n     * @returns the tile sources to be passed to OSD viewer.\n     */\n    private static prepareTileSourcesFromFileValues(imagesToDisplay: ReadStillImageFileValue[]): Object[] {\n        let imageXOffset = 0;\n        let imageYOffset = 0;\n        const tileSources = [];\n\n        for (const image of imagesToDisplay) {\n            const sipiBasePath = image.imageServerIIIFBaseURL + '/' + image.imageFilename;\n            const width = image.dimX;\n            const height = image.dimY;\n\n            // construct OpenSeadragon tileSources according to https://openseadragon.github.io/docs/OpenSeadragon.Viewer.html#open\n            tileSources.push({\n                // construct IIIF tileSource configuration according to\n                // http://iiif.io/api/image/2.1/#technical-properties\n                // see also http://iiif.io/api/image/2.0/#a-implementation-notes\n                'tileSource': {\n                    '@context': 'http://iiif.io/api/image/2/context.json',\n                    '@id': sipiBasePath,\n                    'height': height,\n                    'width': width,\n                    'profile': ['http://iiif.io/api/image/2/level2.json'],\n                    'protocol': 'http://iiif.io/api/image',\n                    'tiles': [{\n                        'scaleFactors': [1, 2, 4, 8, 16, 32],\n                        'width': 1024\n                    }]\n                },\n                'x': imageXOffset,\n                'y': imageYOffset\n            });\n\n            imageXOffset++;\n        }\n\n        return tileSources;\n    }\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n    ngOnChanges(changes: { [key: string]: SimpleChange }) {\n        if (changes['images'] && changes['images'].isFirstChange()) {\n            this.setupViewer();\n        }\n        if (changes['images']) {\n            this.openImages();\n            this.renderRegions();\n\n            this.unhighlightAllRegions();\n            if (this.activateRegion !== undefined) {\n                this.highlightRegion(this.activateRegion);\n            }\n        } else if (changes['activateRegion']) {\n            this.unhighlightAllRegions();\n            if (this.activateRegion !== undefined) {\n                this.highlightRegion(this.activateRegion);\n            }\n        }\n    }\n\n    ngOnInit() {\n        // initialisation is done on first run of ngOnChanges\n    }\n\n    ngOnDestroy() {\n        if (this.viewer) {\n            this.viewer.destroy();\n            this.viewer = undefined;\n        }\n    }\n\n    /**\n     * Renders all ReadStillImageFileValues to be found in [[this.images]].\n     * (Although this.images is a Angular Input property, the built-in change detection of Angular does not detect changes in complex objects or arrays, only reassignment of objects/arrays.\n     * Use this method if additional ReadStillImageFileValues were added to this.images after creation/assignment of the this.images array.)\n     */\n    updateImages() {\n        if (!this.viewer) {\n            this.setupViewer();\n        }\n        this.openImages();\n    }\n\n    /**\n     * Renders all regions to be found in [[this.images]].\n     * (Although this.images is a Angular Input property, the built-in change detection of Angular does not detect changes in complex objects or arrays, only reassignment of objects/arrays.\n     * Use this method if additional regions were added to the resources.images)\n     */\n    updateRegions() {\n        if (!this.viewer) {\n            this.setupViewer();\n        }\n        this.renderRegions();\n    }\n\n    /**\n     * Highlights the polygon elements associated with the given region.\n     *\n     * @param regionIri the Iri of the region whose polygon elements should be highlighted..\n     */\n    private highlightRegion(regionIri) {\n\n        const activeRegion: SVGPolygonElement[] = this.regions[regionIri];\n\n        if (activeRegion !== undefined) {\n            for (const pol of activeRegion) {\n                pol.setAttribute('class', 'roi-svgoverlay active');\n            }\n        }\n    }\n\n    /**\n     * Unhighlights the polygon elements of all regions.\n     *\n     */\n    private unhighlightAllRegions() {\n\n        for (const reg in this.regions) {\n            if (this.regions.hasOwnProperty(reg)) {\n                for (const pol of this.regions[reg]) {\n                    pol.setAttribute('class', 'roi-svgoverlay');\n                }\n            }\n        }\n    }\n\n    /**\n     * Initializes the OpenSeadragon viewer\n     */\n    private setupViewer(): void {\n        const viewerContainer = this.elementRef.nativeElement.getElementsByClassName('osd-container')[0];\n        const osdOptions = {\n            element: viewerContainer,\n            sequenceMode: true,\n            showReferenceStrip: true,\n            showNavigator: true,\n            zoomInButton: 'KUI_OSD_ZOOM_IN',\n            zoomOutButton: 'KUI_OSD_ZOOM_OUT',\n            previousButton: 'KUI_OSD_PREV_PAGE',\n            nextButton: 'KUI_OSD_NEXT_PAGE',\n            homeButton: 'KUI_OSD_HOME',\n            fullPageButton: 'KUI_OSD_FULL_PAGE',\n            rotateLeftButton: 'KUI_OSD_ROTATE_LEFT',        // doesn't work yet\n            rotateRightButton: 'KUI_OSD_ROTATE_RIGHT'       // doesn't work yet\n\n        };\n        this.viewer = new OpenSeadragon.Viewer(osdOptions);\n        this.viewer.addHandler('full-screen', function (args) {\n            if (args.fullScreen) {\n                viewerContainer.classList.add('fullscreen');\n            } else {\n                viewerContainer.classList.remove('fullscreen');\n            }\n        });\n        this.viewer.addHandler('resize', function (args) {\n            args.eventSource.svgOverlay().resize();\n        });\n\n    }\n\n    /**\n     * Adds all images in this.images to the viewer.\n     * Images are positioned in a horizontal row next to each other.\n     */\n    private openImages(): void {\n        // imageXOffset controls the x coordinate of the left side of each image in the OpenSeadragon viewport coordinate system.\n        // The first image has its left side at x = 0, and all images are scaled to have a width of 1 in viewport coordinates.\n        // see also: https://openseadragon.github.io/examples/viewport-coordinates/\n\n        const fileValues: ReadStillImageFileValue[] = this.images.map(\n            (img) => {\n                return img.stillImageFileValue;\n            });\n\n        // display only the defined range of this.images\n        const tileSources: Object[] = StillImageComponent.prepareTileSourcesFromFileValues(fileValues);\n\n        this.viewer.clearOverlays();\n        this.viewer.open(tileSources);\n    }\n\n    /**\n     * Adds a ROI-overlay to the viewer for every region of every image in this.images\n     */\n    private renderRegions(): void {\n        this.viewer.clearOverlays();\n        this.regions = {};\n\n        let imageXOffset = 0; // see documentation in this.openImages() for the usage of imageXOffset\n\n        for (const image of this.images) {\n            const aspectRatio = (image.stillImageFileValue.dimY / image.stillImageFileValue.dimX);\n\n            // collect all geometries belonging to this page\n            const geometries: GeometryForRegion[] = [];\n            image.regions.map((reg) => {\n\n                this.regions[reg.regionResource.id] = [];\n                const geoms = reg.getGeometries();\n\n                geoms.map((geom) => {\n                    const geomForReg = new GeometryForRegion(geom.geometry, reg.regionResource);\n\n                    geometries.push(geomForReg);\n                });\n            });\n\n            // sort all geometries belonging to this page\n            geometries.sort((geom1, geom2) => {\n\n                if (geom1.geometry.type === 'rectangle' && geom2.geometry.type === 'rectangle') {\n\n                    const surf1 = StillImageComponent.surfaceOfRectangularRegion(geom1.geometry);\n                    const surf2 = StillImageComponent.surfaceOfRectangularRegion(geom2.geometry);\n\n                    // if reg1 is smaller than reg2, return 1\n                    // reg1 then comes after reg2 and thus is rendered later\n                    if (surf1 < surf2) {\n                        return 1;\n                    } else {\n                        return -1;\n                    }\n\n                } else {\n                    return 0;\n                }\n\n\n            });\n\n            // render all geometries for this page\n            for (const geom of geometries) {\n\n                const geometry = geom.geometry;\n                this.createSVGOverlay(geom.region.id, geometry, aspectRatio, imageXOffset, geom.region.label);\n\n            }\n\n            imageXOffset++;\n        }\n\n    }\n\n    /**\n     * Creates and adds a ROI-overlay to the viewer\n     * @param regionIri the Iri of the region.\n     * @param geometry - the geometry describing the ROI\n     * @param aspectRatio -  the aspectRatio (h/w) of the image on which the geometry should be placed\n     * @param xOffset -  the x-offset in Openseadragon viewport coordinates of the image on which the geometry should be placed\n     * @param toolTip -  the tooltip which should be displayed on mousehover of the svg element\n     */\n    private createSVGOverlay(regionIri: string, geometry: RegionGeometry, aspectRatio: number, xOffset: number, toolTip: string): void {\n        const lineColor = geometry.lineColor;\n        const lineWidth = geometry.lineWidth;\n\n        let svgElement;\n        switch (geometry.type) {\n            case 'rectangle':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');  // yes, we render rectangles as svg polygon elements\n                this.addSVGAttributesRectangle(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            case 'polygon':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n                this.addSVGAttributesPolygon(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            case 'circle':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n                this.addSVGAttributesCircle(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            default:\n                console.log('ERROR: StillImageOSDViewerComponent.createSVGOverlay: unknown geometryType: ' + geometry.type);\n                return;\n        }\n        svgElement.id = 'roi-svgoverlay-' + Math.random() * 10000;\n        svgElement.setAttribute('class', 'roi-svgoverlay');\n        svgElement.setAttribute('style', 'stroke: ' + lineColor + '; stroke-width: ' + lineWidth + 'px;');\n\n        // event when a region is clicked (output)\n        svgElement.addEventListener('click', () => {\n            this.regionHovered.emit(regionIri);\n        }, false);\n\n        const svgTitle = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n        svgTitle.textContent = toolTip;\n\n        const svgGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        svgGroup.appendChild(svgTitle);\n        svgGroup.appendChild(svgElement);\n\n        const overlay = this.viewer.svgOverlay();\n        overlay.node().appendChild(svgGroup);\n\n        this.regions[regionIri].push(svgElement);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'rectangle' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'polygon' (sic))\n     * @param geometry - the geometry describing the rectangle\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesRectangle(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const pointA = geometry.points[0];\n        const pointB = geometry.points[1];\n\n        // geometry.points contains two diagonally opposed corners of the rectangle, but the order of the corners is arbitrary.\n        // We therefore construct the upperleft (UL), lowerright (LR), upperright (UR) and lowerleft (LL) positions of the corners with min and max operations.\n        const positionUL = new Point2D(Math.min(pointA.x, pointB.x), Math.min(pointA.y, pointB.y));\n        const positionLR = new Point2D(Math.max(pointA.x, pointB.x), Math.max(pointA.y, pointB.y));\n        const positionUR = new Point2D(Math.max(pointA.x, pointB.x), Math.min(pointA.y, pointB.y));\n        const positionLL = new Point2D(Math.min(pointA.x, pointB.x), Math.max(pointA.y, pointB.y));\n\n        const points = [positionUL, positionUR, positionLR, positionLL];\n        const viewCoordPoints = this.image2ViewPortCoords(points, aspectRatio, xOffset);\n        const pointsString = this.createSVGPolygonPointsAttribute(viewCoordPoints);\n        svgElement.setAttribute('points', pointsString);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'polygon' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'polygon')\n     * @param geometry - the geometry describing the polygon\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesPolygon(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const viewCoordPoints = this.image2ViewPortCoords(geometry.points, aspectRatio, xOffset);\n        const pointsString = this.createSVGPolygonPointsAttribute(viewCoordPoints);\n        svgElement.setAttribute('points', pointsString);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'circle' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'circle')\n     * @param geometry - the geometry describing the circle\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesCircle(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const viewCoordPoints = this.image2ViewPortCoords(geometry.points, aspectRatio, xOffset);\n        const cx = String(viewCoordPoints[0].x);\n        const cy = String(viewCoordPoints[0].y);\n        // geometry.radius contains not the radius itself, but the coordinates of a (arbitrary) point on the circle.\n        // We therefore have to calculate the length of the vector geometry.radius to get the actual radius. -> sqrt(x^2 + y^2)\n        // Since geometry.radius has its y coordinate scaled to the height of the image,\n        // we need to multiply it with the aspectRatio to get to the scale used by Openseadragon, analoguous to this.image2ViewPortCoords()\n        const radius = String(Math.sqrt(geometry.radius.x * geometry.radius.x + aspectRatio * aspectRatio * geometry.radius.y * geometry.radius.y));\n        svgElement.setAttribute('cx', cx);\n        svgElement.setAttribute('cy', cy);\n        svgElement.setAttribute('r', radius);\n    }\n\n    /**\n     * Maps a Point2D[] with coordinates relative to an image to a new Point2D[] with coordinates in the viewport coordinate system of Openseadragon\n     * see also: https://openseadragon.github.io/examples/viewport-coordinates/\n     * @param points - an array of points in coordinate system relative to an image\n     * @param aspectRatio - the aspectRatio (h/w) of the image\n     * @param xOffset - the x-offset in viewport coordinates of the image\n     * @returns - a new Point2D[] with coordinates in the viewport coordinate system of Openseadragon\n     */\n    private image2ViewPortCoords(points: Point2D[], aspectRatio: number, xOffset: number): Point2D[] {\n        return points.map((point) => {\n            return new Point2D(point.x + xOffset, point.y * aspectRatio);\n        });\n    }\n\n    /**\n     * Returns a string in the format expected by the 'points' attribute of a SVGElement\n     * @param points - an array of points to be serialized to a string\n     * @returns - the points serialized to a string in the format expected by the 'points' attribute of a SVGElement\n     */\n    private createSVGPolygonPointsAttribute(points: Point2D[]): string {\n        let pointsString = '';\n        for (const i in points) {\n            if (points.hasOwnProperty(i)) {\n                pointsString += points[i].x;\n                pointsString += ',';\n                pointsString += points[i].y;\n                pointsString += ' ';\n            }\n        }\n        return pointsString;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-text',\n  template: `<p>\n  text works!\n</p>\n`,\n  styles: [``]\n})\nexport class TextComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadBooleanValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-boolean-value',\n  template: `<mat-checkbox [checked]=\"valueObject.bool\" disabled=\"true\"></mat-checkbox>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class BooleanValueComponent {\n\n  @Input()\n  set valueObject(value: ReadBooleanValue) {\n      this._booleanValueObj = value;\n  }\n\n  get valueObject() {\n      return this._booleanValueObj;\n  }\n\n  private _booleanValueObj: ReadBooleanValue;\n\n  constructor() { }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadColorValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-color-value',\n    template: `<span [style.background-color]=\"valueObject.colorHex\">{{valueObject.colorHex}}</span>`,\n    styles: [`.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}.mat-form-field{width:36px;overflow-x:visible}`]\n})\nexport class ColorValueComponent {\n\n    @Input()\n    set valueObject(value: ReadColorValue) {\n        this._colorValueObj = value;\n    }\n\n    get valueObject() {\n        return this._colorValueObj;\n    }\n\n    private _colorValueObj: ReadColorValue;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { DateRangeSalsah, DateSalsah, Precision, ReadDateValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-date-value',\n  template: `<span *ngIf=\"period; else preciseDate\">\n    {{dates[0].date | date: dates[0].format}}\n    <span *ngIf=\"era\">\n        {{dates[0].era}}\n    </span>\n    - {{dates[1].date | date: dates[1].format}}\n    <span *ngIf=\"era\">\n        {{dates[1].era}}\n    </span>\n\n    <span *ngIf=\"calendar\">\n        ({{dates[0].calendar}})\n    </span>\n</span>\n\n<ng-template #preciseDate>\n\n    <span>\n        {{dates[0].date | date: dates[0].format }}\n        <span *ngIf=\"era\">\n            {{dates[0].era}}\n        </span>\n        <span *ngIf=\"calendar\">\n            ({{dates[0].calendar}})\n        </span>\n    </span>\n\n</ng-template>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class DateValueComponent {\n\n  @Input()\n  set calendar(value: boolean) {\n    this._calendar = value;\n  }\n\n  get calendar() {\n    return this._calendar;\n  }\n\n  @Input()\n  set era(value: boolean) {\n    this._era = value;\n  }\n\n  get era() {\n    return this._era;\n  }\n\n  @Input()\n  set valueObject(value: ReadDateValue) {\n    this._dateValueObj = value;\n\n    const dateOrRange: DateSalsah | DateRangeSalsah = this.valueObject.getDateSalsah();\n    if (dateOrRange instanceof DateRangeSalsah) {\n      // period (start and end dates)\n      this.period = true;\n      this.dates = [this.getJSDate(dateOrRange.start), this.getJSDate(dateOrRange.end)];\n    } else {\n      // single date\n      this.period = false;\n      this.dates = [this.getJSDate(dateOrRange)];\n    }\n\n  }\n\n  get valueObject() {\n    return this._dateValueObj;\n  }\n\n  dates: DateFormatter[];\n  period: boolean;\n  private _calendar: boolean;\n  private _era: boolean;\n  private _dateValueObj: ReadDateValue;\n\n  constructor() { }\n\n  /**\n   * Converts a `DateSalsah` to a JS Date, providing necessary formatting information.\n   * JULIAN and GREGORIAN calendar are the only available for the moment.\n   *\n   * @param date the date to be converted.\n   * @return DateFormatter.\n   */\n  getJSDate(date: DateSalsah): DateFormatter {\n\n    if (date.precision === Precision.yearPrecision) {\n      return {\n        format: 'yyyy',\n        date: new Date(date.year.toString()),\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else if (date.precision === Precision.monthPrecision) {\n      return {\n        format: 'MMMM ' + 'yyyy',\n        date: new Date(date.year, date.month - 1, 1), // 0 base month\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else if (date.precision === Precision.dayPrecision) {\n      return {\n        format: 'longDate',\n        date: new Date(date.year, date.month - 1, date.day),  // 0 base month\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else {\n      console.error('Error: incorrect precision for date');\n    }\n\n  }\n\n}\n\n/**\n * Date structure for the template\n */\nexport interface DateFormatter {\n  format: string;\n  date: Date;\n  era: string;\n  calendar: string;\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadDecimalValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-decimal-value',\n  template: `<span>{{valueObject.decimal}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class DecimalValueComponent {\n\n  @Input()\n  set valueObject(value: ReadDecimalValue) {\n    this._decimalValueObj = value;\n  }\n\n  get valueObject() {\n    return this._decimalValueObj;\n  }\n\n  private _decimalValueObj: ReadDecimalValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-external-res-value',\n  template: `<p>\n  external-res-value works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class ExternalResValueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadGeomValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-geometry-value',\n  template: `<span>{{valueObject.geometryString}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class GeometryValueComponent {\n\n  @Input()\n  set valueObject(value: ReadGeomValue) {\n    this._geomValueObj = value;\n  }\n\n  get valueObject() {\n    return this._geomValueObj;\n  }\n\n  private _geomValueObj: ReadGeomValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-geoname-value',\n  template: `<p>\n  geoname-value works!\n</p>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class GeonameValueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadIntegerValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-integer-value',\n    template: `<span>{{valueObject.integer}}</span>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class IntegerValueComponent {\n\n    @Input()\n    set valueObject(value: ReadIntegerValue) {\n        this._integerValueObj = value;\n    }\n\n    get valueObject() {\n        return this._integerValueObj;\n    }\n\n    private _integerValueObj: ReadIntegerValue;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadIntervalValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-interval-value',\n  template: `<span>{{valueObject.intervalStart}} - {{valueObject.intervalEnd}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class IntervalValueComponent {\n\n  @Input()\n  set valueObject(value: ReadIntervalValue) {\n    this._intervalValueObj = value;\n  }\n\n  get valueObject() {\n    return this._intervalValueObj;\n  }\n\n  private _intervalValueObj: ReadIntervalValue;\n\n  constructor() { }\n\n}\n","import { Component, Inject, Input, Output, EventEmitter } from '@angular/core';\nimport { OntologyInformation, ReadLinkValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-link-value',\n    template: `<a class=\"salsah-link\" (click)=\"refResClicked()\">{{referredResource}}</a>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class LinkValueComponent {\n\n    @Input()\n    set ontologyInfo(value: OntologyInformation) {\n        this._ontoInfo = value;\n    }\n\n    get ontologyInfo() {\n        return this._ontoInfo;\n    }\n\n    @Input()\n    set valueObject(value: ReadLinkValue) {\n        this._linkValueObj = value;\n\n        if (this.valueObject.referredResource !== undefined) {\n            this.referredResource = this.valueObject.referredResource.label;\n        } else {\n            this.referredResource = this.valueObject.referredResourceIri;\n        }\n    }\n\n    get valueObject() {\n        return this._linkValueObj;\n    }\n\n    @Output()\n    referredResourceClicked: EventEmitter<ReadLinkValue> = new EventEmitter();\n\n    private _linkValueObj: ReadLinkValue;\n    private _ontoInfo: OntologyInformation;\n    referredResource: string;\n\n    constructor() { }\n\n    refResClicked() {\n        this.referredResourceClicked.emit(this._linkValueObj);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadListValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-list-value',\n  template: `<span>{{valueObject.listNodeLabel}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class ListValueComponent {\n\n  @Input()\n  set valueObject(value: ReadListValue) {\n    this._listValueObj = value;\n  }\n\n  get valueObject() {\n    return this._listValueObj;\n  }\n\n  private _listValueObj: ReadListValue;\n\n  constructor() { }\n\n}\n","import { Component, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { OntologyInformation, ReadTextValueAsHtml, KnoraConstants } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-html',\n    template: `<div>{{valueObject.html}}</div>`,\n    styles: [``]\n})\nexport class TextValueAsHtmlComponent {\n\n    @Output()\n    referredResourceClicked: EventEmitter<string> = new EventEmitter();\n\n    @Input()\n    set ontologyInfo(value: OntologyInformation) {\n        this._ontoInfo = value;\n    }\n\n    get ontologyInfo() {\n        return this._ontoInfo;\n    }\n\n    @Input()\n    set bindEvents(value: Boolean) {\n        this._bindEvents = value;\n    }\n\n    get bindEvents() {\n        return this._bindEvents;\n    }\n\n    @Input()\n    set valueObject(value: ReadTextValueAsHtml) {\n        this._htmlValueObj = value;\n\n        if (this.el.nativeElement.innerHTML) {\n            this.el.nativeElement.innerHTML = this.valueObject.html;\n        }\n    }\n\n    get valueObject() {\n        return this._htmlValueObj;\n    }\n\n    html: string;\n    private _htmlValueObj: ReadTextValueAsHtml;\n    private _ontoInfo: OntologyInformation;\n    private _bindEvents: Boolean;\n\n    constructor(private el: ElementRef) {\n    }\n\n    refResClicked(refResourceIri: string) {\n        this.referredResourceClicked.emit(refResourceIri);\n    }\n\n    /**\n     * Binds a click event to standoff links that shows the referred resource.\n     *\n     * @param targetElement\n     */\n    @HostListener('click', ['$event.target'])\n    onClick(targetElement) {\n        if (this._bindEvents && targetElement.nodeName.toLowerCase() === 'a'\n            && targetElement.className.toLowerCase().indexOf(KnoraConstants.SalsahLink) >= 0\n            && targetElement.href !== undefined) {\n            this.refResClicked(targetElement.href);\n            // prevent propagation\n            return false;\n        } else if (this.bindEvents && targetElement.nodeName.toLowerCase() === 'a' && targetElement.href !== undefined) {\n            // open link in a new window\n            window.open(targetElement.href, '_blank');\n            // prevent propagation\n            return false;\n        } else {\n            // prevent propagation\n            return false;\n        }\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextValueAsString } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-string',\n    template: `<span>{{valueObject.str}}</span>\n`,\n    styles: [``]\n})\nexport class TextValueAsStringComponent {\n\n    @Input()\n    set valueObject(value: ReadTextValueAsString) {\n        this._textStringValueObj = value;\n    }\n\n    get valueObject() {\n        return this._textStringValueObj;\n    }\n\n    private _textStringValueObj: ReadTextValueAsString;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextValueAsXml } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-xml',\n    template: `<span>{{valueObject.xml}}</span>`,\n    styles: [``]\n})\nexport class TextValueAsXmlComponent {\n\n    @Input()\n    set valueObject(value: ReadTextValueAsXml) {\n        this._xmlValueObj = value;\n    }\n\n    get valueObject() {\n        return this._xmlValueObj;\n    }\n\n    private _xmlValueObj: ReadTextValueAsXml;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextFileValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-textfile-value',\n  template: `<a target=\"_blank\" href=\"{{valueObject.textFileURL}}\">{{valueObject.textFilename}}</a>`,\n  styles: [``]\n})\nexport class TextfileValueComponent {\n\n  @Input()\n  set valueObject(value: ReadTextFileValue) {\n    this._textfileValueObj = value;\n  }\n\n  get valueObject() {\n    return this._textfileValueObj;\n  }\n\n  private _textfileValueObj: ReadTextFileValue;\n\n  constructor() { }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadUriValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-uri-value',\n  template: `<a href=\"{{valueObject.uri}}\" target=\"_blank\">{{valueObject.uri}}</a>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class UriValueComponent {\n\n  @Input()\n  set valueObject(value: ReadUriValue) {\n    this.__uriValueObj = value;\n  }\n\n  get valueObject() {\n    return this.__uriValueObj;\n  }\n\n  private __uriValueObj: ReadUriValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-compare-view',\n  template: `<p>\n  compare-view works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class CompareViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-graph-view',\n  template: `<p>\n  graph-view works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class GraphViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-grid-view',\n  template: `<p>\n  grid-view works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class GridViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { KnoraConstants } from '@knora/core';\n\n@Component({\n    selector: 'kui-list-view',\n    template: `<div>\n    <kui-progress-indicator *ngIf=\"isLoading\" [color]=\"'#D88958'\"></kui-progress-indicator>\n\n    <mat-list class=\"list-view\" *ngFor=\"let res of result; let i = index; let last = last;\">\n        <mat-list-item class=\"link\">\n            <mat-icon matListIcon>image_search</mat-icon>\n            <h2 matLine class=\"lv-label\">{{ontologyInfo?.getLabelForResourceClass(res.type)}} - {{res.label}}</h2>\n\n            <div matLine *ngFor=\"let prop of res.properties | kuiKey\">\n                <div *ngFor=\"let val of prop.value | kuiKey\">\n                    <div [ngSwitch]=\"val.value.getClassName()\">\n\n                        <div matLine class=\"lv-html-text\" *ngSwitchCase=\"KnoraConstants.ReadTextValueAsHtml\">\n                            <kui-text-value-as-html [valueObject]=\"val.value\" [ontologyInfo]=\"ontologyInfo\" [bindEvents]=\"false\"></kui-text-value-as-html>\n                            <p class=\"lv-read-more\"></p>\n                        </div>\n\n                        <span matLine>\n                            <kui-date-value *ngSwitchCase=\"KnoraConstants.ReadDateValue\" [valueObject]=\"val.value\" [calendar]=\"true\" [era]=\"true\"></kui-date-value>\n                            <span *ngSwitchDefault=\"\">{{val.value.getContent()}}</span>\n                        </span>\n                        <br>\n                        <span matLine *ngIf=\"ontologyInfo?.getLabelForProperty(prop.key) !== 'Text'\">\n                            {{ontologyInfo?.getLabelForProperty(prop.key)}}\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n        </mat-list-item>\n\n        <mat-divider *ngIf=\"!last\"></mat-divider>\n\n    </mat-list>\n</div>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class ListViewComponent {\n\n    @Input() result;\n    @Input() ontologyInfo;\n    @Input() isLoading;\n\n    KnoraConstants = KnoraConstants;\n\n    constructor() { }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'kui-properties-view',\n    template: `<p>\n    properties-view works!\n</p>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class PropertiesViewComponent {\n\n    constructor() { }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n    ApiServiceError,\n    ApiServiceResult,\n    ConvertJSONLD,\n    IncomingService,\n    KnoraConstants,\n    OntologyCacheService,\n    OntologyInformation,\n    ReadResource,\n    ReadResourcesSequence,\n    ResourceService\n} from '@knora/core';\n\ndeclare let require: any;\nconst jsonld = require('jsonld');\n\n@Component({\n    selector: 'kui-resource-view',\n    template: `<mat-card>\n\n    <!-- TODO: switch through the media type -->\n    <kui-still-image></kui-still-image>\n    <kui-moving-image></kui-moving-image>\n    <kui-annotation></kui-annotation>\n    <kui-audio></kui-audio>\n    <kui-collection></kui-collection>\n    <kui-ddd></kui-ddd>\n    <kui-document></kui-document>\n    <kui-link-obj></kui-link-obj>\n    <kui-object></kui-object>\n    <kui-region></kui-region>\n    <kui-text></kui-text>\n\n    <h2>metadata for resource {{ resource?.label}} ({{ resource?.id }})</h2>\n    <h3>type: {{ontologyInfo?.getLabelForResourceClass(resource?.type)}}</h3>\n\n    <div *ngFor=\"let prop of resource?.properties | kuiKey\">\n        <mat-list>\n            <span>{{ontologyInfo?.getLabelForProperty(prop.key)}}</span>\n            <mat-list-item *ngFor=\"let val of prop.value\">\n                <span [ngSwitch]=\"val.getClassName()\">\n                    <kui-color-value *ngSwitchCase=\"KnoraConstants.ReadColorValue\" [valueObject]=\"val\"></kui-color-value>\n                    <kui-text-value-as-html *ngSwitchCase=\"KnoraConstants.ReadTextValueAsHtml\" [valueObject]=\"val\" [ontologyInfo]=\"ontologyInfo\" [bindEvents]=\"true\"></kui-text-value-as-html>\n                    <kui-text-value-as-string *ngSwitchCase=\"KnoraConstants.ReadTextValueAsString\" [valueObject]=\"val\"></kui-text-value-as-string>\n                    <kui-text-value-as-xml *ngSwitchCase=\"KnoraConstants.ReadTextValueAsXml\" [valueObject]=\"val\"></kui-text-value-as-xml>\n                    <kui-date-value *ngSwitchCase=\"KnoraConstants.ReadDateValue\" [valueObject]=\"val\"></kui-date-value>\n                    <kui-link-value *ngSwitchCase=\"KnoraConstants.ReadLinkValue\" [valueObject]=\"val\" [ontologyInfo]=\"ontologyInfo\"></kui-link-value>\n                    <kui-integer-value *ngSwitchCase=\"KnoraConstants.ReadIntegerValue\" [valueObject]=\"val\"></kui-integer-value>\n                    <kui-decimal-value *ngSwitchCase=\"KnoraConstants.ReadDecimalValue\" [valueObject]=\"val\"></kui-decimal-value>\n                    <kui-geometry-value *ngSwitchCase=\"KnoraConstants.ReadGeomValue\" [valueObject]=\"val\"></kui-geometry-value>\n                    <kui-uri-value *ngSwitchCase=\"KnoraConstants.ReadUriValue\" [valueObject]=\"val\"></kui-uri-value>\n                    <kui-boolean-value *ngSwitchCase=\"KnoraConstants.ReadBooleanValue\" [valueObject]=\"val\"></kui-boolean-value>\n                    <kui-interval-value *ngSwitchCase=\"KnoraConstants.ReadIntervalValue\" [valueObject]=\"val\"></kui-interval-value>\n                    <kui-list-value *ngSwitchCase=\"KnoraConstants.ReadListValue\" [valueObject]=\"val\"></kui-list-value>\n                    <kui-textfile-value *ngSwitchCase=\"KnoraConstants.TextFileValue\" [valueObject]=\"val\"></kui-textfile-value>\n                    <span *ngSwitchDefault=\"\">Not supported {{val.getClassName()}}</span>\n                </span>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n</mat-card>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class ResourceViewComponent implements OnInit {\n\n    @Input() iri?: string = 'http://rdfh.ch/8be1b7cf7103';\n\n    ontologyInfo: OntologyInformation; // ontology information about resource classes and properties present in the requested resource with Iri `iri`\n    resource: ReadResource; // the resource to be displayed\n    errorMessage: any;\n\n    KnoraConstants = KnoraConstants;\n\n    constructor(private _route: ActivatedRoute,\n                private _resourceService: ResourceService,\n                private _cacheService: OntologyCacheService,\n                private _incomingService: IncomingService) {\n\n        const routeParams = this._route.snapshot.params;\n        this.iri = routeParams.id;\n\n    }\n\n    ngOnInit() {\n        this.getResource(this.iri);\n    }\n\n    private getResource(iri: string): void {\n        this._resourceService.getResource(iri)\n            .subscribe(\n                (result: ApiServiceResult) => {\n                    console.log('result: ', result.body);\n                    const promises = jsonld.promises;\n                    // compact JSON-LD using an empty context: expands all Iris\n                    const promise = promises.compact(result.body, {});\n\n                    promise.then((compacted) => {\n\n                        const resourceSeq: ReadResourcesSequence = ConvertJSONLD.createReadResourcesSequenceFromJsonLD(compacted);\n\n                        // make sure that exactly one resource is returned\n                        if (resourceSeq.resources.length === 1) {\n\n                            // get resource class Iris from response\n                            const resourceClassIris: string[] = ConvertJSONLD.getResourceClassesFromJsonLD(compacted);\n\n                            // request ontology information about resource class Iris (properties are implied)\n                            this._cacheService.getResourceClassDefinitions(resourceClassIris).subscribe(\n                                (resourceClassInfos: any) => {\n                                    // initialize ontology information\n                                    this.ontologyInfo = resourceClassInfos; // console.log('initialization of ontologyInfo: ', this.ontologyInfo); > object received\n\n                                    // prepare a possibly attached image file to be displayed\n                                    // this.collectImagesAndRegionsForResource(resourceSeq.resources[0]);\n\n                                    this.resource = resourceSeq.resources[0];\n                                    // console.log('resource: ', this.resource);\n\n                                    // this.requestIncomingResources();\n                                },\n                                (err) => {\n\n                                    console.log('cache request failed: ' + err);\n                                });\n                        } else {\n                            // exactly one resource was expected, but resourceSeq.resources.length != 1\n                            this.errorMessage = `Exactly one resource was expected, but ${resourceSeq.resources.length} resource(s) given.`;\n                        }\n                    }, function (err) {\n                        console.error('JSONLD of full resource request could not be expanded:' + err);\n                    });\n                    // this.isLoading = false;\n                },\n                (error: ApiServiceError) => {\n                    console.error(error);\n                    // this.errorMessage = <any>error;\n                    // this.isLoading = false;\n                });\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-table-view',\n  template: `<p>\n  table-view works!\n</p>\n`,\n  styles: [``]\n})\nexport class TableViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport {\n    CountQueryResult,\n    ExtendedSearchParams,\n    KnoraConstants,\n    OntologyCacheService,\n    OntologyInformation,\n    ReadResource,\n    ReadResourcesSequence,\n    SearchParamsService,\n    SearchService\n} from '@knora/core';\nimport { Subscription } from 'rxjs';\n\nexport abstract class KuiView implements OnInit, OnDestroy {\n\n    abstract offset: number;\n    abstract maxOffset: number;\n    abstract result: ReadResource[];\n    abstract ontologyInfo: OntologyInformation;\n    abstract navigationSubscription: Subscription;\n    abstract gravsearchGenerator: ExtendedSearchParams;\n    abstract searchQuery: string;\n    abstract searchMode: string;\n    abstract numberOfAllResults: number;\n    abstract KnoraConstants: KnoraConstants;\n    abstract rerender: boolean;\n    abstract isLoading: boolean;\n    abstract errorMessage: any;\n    abstract pagingLimit: number;\n\n    constructor(\n        protected _route: ActivatedRoute,\n        protected _searchService: SearchService,\n        protected _searchParamsService: SearchParamsService,\n        protected _router: Router) {\n    }\n\n    ngOnInit() {\n        this.navigationSubscription = this._route.paramMap.subscribe((params: Params) => {\n            this.searchMode = params.get('mode');\n\n            // init offset  and result\n            this.offset = 0;\n            this.result = [];\n\n            if (this.searchMode === 'fulltext') {\n                this.searchQuery = params.get('q');\n            } else if (this.searchMode === 'extended') {\n                this.gravsearchGenerator = this._searchParamsService.getSearchParams();\n                this.generateGravsearchQuery();\n            }\n\n            this.rerender = true;\n            this.getResult();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.navigationSubscription !== undefined) {\n            this.navigationSubscription.unsubscribe();\n        }\n    }\n\n    /**\n     * Generates the Gravsearch query for the current offset.\n     */\n    protected generateGravsearchQuery() {\n\n        const gravsearch: string | boolean = this.gravsearchGenerator.generateGravsearch(this.offset);\n        if (gravsearch === false) {\n            // no valid search params (application has been reloaded)\n            // go to root\n            this._router.navigate([''], { relativeTo: this._route });\n            return;\n        } else {\n            this.searchQuery = <string>gravsearch;\n        }\n    }\n\n    /**\n     * Get search result from Knora - 2 cases: simple search and extended search\n     */\n    protected getResult() {\n        this.isLoading = true;\n\n        // FULLTEXT SEARCH\n        if (this.searchMode === 'fulltext') {\n\n            if (this.offset === 0) {\n                // perform count query\n                this._searchService.doFullTextSearchCountQueryCountQueryResult(this.searchQuery)\n                    .subscribe(\n                        this.showNumberOfAllResults,\n                        (error: any) => {\n                            this.errorMessage = <any>error;\n                        }\n                    );\n            }\n\n            // perform full text search\n            this._searchService.doFullTextSearchReadResourceSequence(this.searchQuery, this.offset)\n                .subscribe(\n                    this.processSearchResults, // function pointer\n                    (error: any) => {\n                        this.errorMessage = <any>error;\n                    }\n                );\n\n            // EXTENDED SEARCH\n        } else if (this.searchMode === 'extended') {\n            // perform count query\n            if (this.offset === 0) {\n                this._searchService.doExtendedSearchCountQueryCountQueryResult(this.searchQuery)\n                    .subscribe(\n                        this.showNumberOfAllResults,\n                        (error: any) => {\n                            this.errorMessage = <any>error;\n                        }\n                    );\n            }\n            this._searchService.doExtendedSearchReadResourceSequence(this.searchQuery)\n                .subscribe(\n                    this.processSearchResults, // function pointer\n                    (error: any) => {\n                        this.errorMessage = <any>error;\n                    });\n\n        } else {\n            this.errorMessage = `search mode invalid: ${this.searchMode}`;\n        }\n    }\n\n    /**\n     *\n     * Converts search results from JSON-LD to a [[ReadResourcesSequence]] and requests information about ontology entities.\n     * This function is passed to `subscribe` as a pointer (instead of redundantly defining the same lambda function).\n     *\n     * @param {ReadResourcesSequence} searchResult the answer to a search request.\n     */\n    private processSearchResults = (searchResult: ReadResourcesSequence) => {\n\n        // assign ontology information to a variable so it can be used in the component's template\n        if (this.ontologyInfo === undefined) {\n            // init ontology information\n            this.ontologyInfo = searchResult.ontologyInformation;\n        } else {\n            // update ontology information\n            this.ontologyInfo.updateOntologyInformation(searchResult.ontologyInformation);\n        }\n        // append results to search results\n        this.result = this.result.concat(searchResult.resources);\n\n        this.isLoading = false;\n        this.rerender = false;\n\n    }\n\n    /**\n     * Shows total number of results returned by a count query.\n     *\n     * @param {ApiServiceResult} countQueryResult the response to a count query.\n     */\n    private showNumberOfAllResults = (countQueryResult: CountQueryResult) => {\n        this.numberOfAllResults = countQueryResult.numberOfResults;\n\n        if (this.numberOfAllResults > 0) {\n            // offset is 0-based\n            // if numberOfAllResults equals the pagingLimit, the max. offset is 0\n            this.maxOffset = Math.floor((this.numberOfAllResults - 1) / this.pagingLimit);\n        } else {\n            this.maxOffset = 0;\n        }\n    }\n\n    /**\n     * Loads the next page of results.\n     * The results will be appended to the existing ones.\n     *\n     * @param {number} offset\n     * @returns void\n     */\n    loadMore(offset: number): void {\n        // update the page offset when the end of scroll is reached to get the next page of search results\n        if (this.offset < this.maxOffset) {\n            this.offset++;\n        } else {\n            return;\n        }\n\n        if (this.searchMode === 'extended') {\n            this.generateGravsearchQuery();\n        }\n\n        this.getResult();\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { KuiView } from '../kui-view';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport {\n  ApiServiceError,\n  ExtendedSearchParams,\n  GravsearchGenerationService,\n  KnoraConstants,\n  OntologyCacheService,\n  OntologyInformation,\n  ReadResource,\n  ReadResourcesSequence,\n  SearchParamsService,\n  SearchService\n} from '@knora/core';\n\n@Component({\n  selector: 'kui-search-results',\n  template: `<div *ngIf=\"!rerender\">\n    <div *ngIf=\"numberOfAllResults !== 0 && result; else noResult\">\n        <h4>Number of results: {{numberOfAllResults}}</h4>\n        <mat-tab-group>\n            <mat-tab label=\"List\">\n                <kui-list-view [result]=\"result\" [ontologyInfo]=\"ontologyInfo\" [isLoading]=\"isLoading\"></kui-list-view>\n            </mat-tab>\n            <mat-tab label=\"Grid\">\n                <kui-grid-view></kui-grid-view>\n            </mat-tab>\n            <mat-tab label=\"Table\">\n                <kui-table-view></kui-table-view>\n            </mat-tab>\n            <mat-tab label=\"Gravsearch\">\n                <kui-graph-view></kui-graph-view>\n            </mat-tab>\n        </mat-tab-group>\n\n        <div class=\"load-panel\" *ngIf=\"result.length > 0\">\n            <button mat-flat-button color=\"primary\" class=\"link center\" (click)=\"loadMore(offset)\" *ngIf=\"offset < maxOffset\">Load more\n                <mat-icon>keyboard_arrow_down</mat-icon>\n            </button>\n        </div>\n\n    </div>\n\n    <!-- In case of 0 result -->\n    <ng-template #noResult>\n        <p>\n            <strong>No result</strong>\n        </p>\n    </ng-template>\n\n</div>\n\n<!-- Error message -->\n<div *ngIf=\"errorMessage\">\n    <p>There is an error: {{errorMessage}}</p>\n</div>`,\n  styles: [`.load-panel{width:100%}.load-panel .center{display:block;line-height:24px;margin:12px auto}`]\n})\nexport class SearchResultsComponent extends KuiView {\n\n  KnoraConstants = KnoraConstants;\n  offset: number = 0;\n  maxOffset: number = 0;\n  gravsearchGenerator: ExtendedSearchParams;\n  result: ReadResource[] = [];\n  ontologyInfo: OntologyInformation;\n  numberOfAllResults: number;\n  rerender: boolean = false;\n  searchQuery: string;\n  searchMode: string;\n  isLoading = true;\n  errorMessage: any = undefined;\n  navigationSubscription: Subscription;\n  pagingLimit: number = 25;\n\n  constructor(\n    protected _route: ActivatedRoute,\n    protected _searchService: SearchService,\n    protected _searchParamsService: SearchParamsService,\n    protected _router: Router\n  ) {\n    super(_route, _searchService, _searchParamsService, _router);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from '@angular/material';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { KuiActionModule } from '@knora/action';\nimport { KuiCoreModule } from '@knora/core';\n\nimport { BooleanValueComponent } from './property/boolean-value/boolean-value.component';\nimport { ColorValueComponent } from './property/color-value/color-value.component';\nimport { DateValueComponent } from './property/date-value/date-value.component';\nimport { DecimalValueComponent } from './property/decimal-value/decimal-value.component';\nimport { ExternalResValueComponent } from './property/external-res-value/external-res-value.component';\nimport { GeometryValueComponent } from './property/geometry-value/geometry-value.component';\nimport { GeonameValueComponent } from './property/geoname-value/geoname-value.component';\nimport { IntegerValueComponent } from './property/integer-value/integer-value.component';\nimport { IntervalValueComponent } from './property/interval-value/interval-value.component';\nimport { LinkValueComponent } from './property/link-value/link-value.component';\nimport { ListValueComponent } from './property/list-value/list-value.component';\nimport { TextValueAsHtmlComponent } from './property/text-value/text-value-as-html/text-value-as-html.component';\nimport { TextValueAsStringComponent } from './property/text-value/text-value-as-string/text-value-as-string.component';\nimport { TextValueAsXmlComponent } from './property/text-value/text-value-as-xml/text-value-as-xml.component';\nimport { TextfileValueComponent } from './property/textfile-value/textfile-value.component';\nimport { UriValueComponent } from './property/uri-value/uri-value.component';\nimport { AnnotationComponent } from './resource/annotation/annotation.component';\nimport { AudioComponent } from './resource/audio/audio.component';\nimport { CollectionComponent } from './resource/collection/collection.component';\nimport { DddComponent } from './resource/ddd/ddd.component';\nimport { DocumentComponent } from './resource/document/document.component';\nimport { LinkObjComponent } from './resource/link-obj/link-obj.component';\nimport { MovingImageComponent } from './resource/moving-image/moving-image.component';\nimport { ObjectComponent } from './resource/object/object.component';\nimport { RegionComponent } from './resource/region/region.component';\nimport { StillImageComponent } from './resource/still-image/still-image.component';\nimport { TextComponent } from './resource/text/text.component';\nimport { CompareViewComponent } from './view/compare-view/compare-view.component';\nimport { GraphViewComponent } from './view/graph-view/graph-view.component';\nimport { GridViewComponent } from './view/grid-view/grid-view.component';\nimport { ListViewComponent } from './view/list-view/list-view.component';\nimport { PropertiesViewComponent } from './view/properties-view/properties-view.component';\nimport { ResourceViewComponent } from './view/resource-view/resource-view.component';\nimport { TableViewComponent } from './view/table-view/table-view.component';\nimport { SearchResultsComponent } from './view/search-results/search-results.component';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        KuiCoreModule,\n        KuiActionModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatIconModule,\n        MatListModule,\n        MatNativeDateModule,\n        MatSlideToggleModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        AnnotationComponent,\n        AudioComponent,\n        CollectionComponent,\n        DddComponent,\n        DocumentComponent,\n        LinkObjComponent,\n        MovingImageComponent,\n        ObjectComponent,\n        RegionComponent,\n        StillImageComponent,\n        TextComponent,\n        TextValueAsHtmlComponent,\n        TextValueAsStringComponent,\n        TextValueAsXmlComponent,\n        TextfileValueComponent,\n        DateValueComponent,\n        IntegerValueComponent,\n        ColorValueComponent,\n        DecimalValueComponent,\n        UriValueComponent,\n        BooleanValueComponent,\n        GeometryValueComponent,\n        GeonameValueComponent,\n        IntervalValueComponent,\n        ListValueComponent,\n        LinkValueComponent,\n        ExternalResValueComponent,\n        ListViewComponent,\n        GridViewComponent,\n        TableViewComponent,\n        ResourceViewComponent,\n        CompareViewComponent,\n        GraphViewComponent,\n        PropertiesViewComponent,\n        SearchResultsComponent\n    ],\n    exports: [\n\n        AnnotationComponent,\n        AudioComponent,\n        CollectionComponent,\n        DddComponent,\n        DocumentComponent,\n        LinkObjComponent,\n        MovingImageComponent,\n        ObjectComponent,\n        RegionComponent,\n        StillImageComponent,\n        TextComponent,\n        TextValueAsHtmlComponent,\n        TextValueAsStringComponent,\n        TextValueAsXmlComponent,\n        TextfileValueComponent,\n        DateValueComponent,\n        IntegerValueComponent,\n        ColorValueComponent,\n        DecimalValueComponent,\n        UriValueComponent,\n        BooleanValueComponent,\n        GeometryValueComponent,\n        GeonameValueComponent,\n        IntervalValueComponent,\n        ListValueComponent,\n        LinkValueComponent,\n        ExternalResValueComponent,\n        ListViewComponent,\n        GridViewComponent,\n        TableViewComponent,\n        ResourceViewComponent,\n        CompareViewComponent,\n        GraphViewComponent,\n        PropertiesViewComponent,\n        SearchResultsComponent\n    ]\n})\nexport class KuiViewerModule {\n}\n"]}