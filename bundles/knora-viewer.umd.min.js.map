{"version":3,"sources":["ng://@knora/viewer/lib/resource/annotation/annotation.component.ts","ng://@knora/viewer/lib/resource/audio/audio.component.ts","ng://@knora/viewer/lib/resource/collection/collection.component.ts","ng://@knora/viewer/lib/resource/ddd/ddd.component.ts","ng://@knora/viewer/lib/resource/document/document.component.ts","ng://@knora/viewer/lib/resource/link-obj/link-obj.component.ts","ng://@knora/viewer/lib/resource/moving-image/moving-image.component.ts","ng://@knora/viewer/lib/resource/object/object.component.ts","ng://@knora/viewer/lib/resource/region/region.component.ts","null","ng://@knora/viewer/lib/resource/still-image/still-image.component.ts","ng://@knora/viewer/lib/resource/text/text.component.ts","ng://@knora/viewer/lib/property/boolean-value/boolean-value.component.ts","ng://@knora/viewer/lib/property/color-value/color-value.component.ts","ng://@knora/viewer/lib/property/date-value/date-value.component.ts","ng://@knora/viewer/lib/property/decimal-value/decimal-value.component.ts","ng://@knora/viewer/lib/property/external-res-value/external-res-value.component.ts","ng://@knora/viewer/lib/property/geometry-value/geometry-value.component.ts","ng://@knora/viewer/lib/property/geoname-value/geoname-value.component.ts","ng://@knora/viewer/lib/property/integer-value/integer-value.component.ts","ng://@knora/viewer/lib/property/interval-value/interval-value.component.ts","ng://@knora/viewer/lib/property/link-value/link-value.component.ts","ng://@knora/viewer/lib/property/list-value/list-value.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-html/text-value-as-html.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-string/text-value-as-string.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-xml/text-value-as-xml.component.ts","ng://@knora/viewer/lib/property/textfile-value/textfile-value.component.ts","ng://@knora/viewer/lib/property/uri-value/uri-value.component.ts","ng://@knora/viewer/lib/view/compare-view/compare-view.component.ts","ng://@knora/viewer/lib/view/graph-view/graph-view.component.ts","ng://@knora/viewer/lib/view/grid-view/grid-view.component.ts","ng://@knora/viewer/lib/view/list-view/list-view.component.ts","ng://@knora/viewer/lib/view/properties-view/properties-view.component.ts","ng://@knora/viewer/lib/view/resource-view/resource-view.component.ts","ng://@knora/viewer/lib/view/table-view/table-view.component.ts","ng://@knora/viewer/lib/viewer.module.ts"],"names":["AnnotationComponent","prototype","ngOnInit","Component","args","selector","template","styles","AudioComponent","CollectionComponent","DddComponent","DocumentComponent","LinkObjComponent","MovingImageComponent","ObjectComponent","RegionComponent","__values","o","m","Symbol","iterator","i","call","next","length","value","done","ImageRegion","regionResource","this","getGeometries","properties","KnoraConstants","hasGeometry","StillImageRepresentation","stillImageFileValue","regions","RequestStillImageRepresentations","offsetChange","whenLoadedCB","GeometryForRegion","geometry","region","StillImageComponent","elementRef","getImages","EventEmitter","regionHovered","pagingLimit","surfaceOfRectangularRegion","geom","type","console","log","Math","max","points","x","min","y","prepareTileSourcesFromFileValues","imagesToDisplay","imageXOffset","tileSources","imagesToDisplay_1","tslib_1.__values","imagesToDisplay_1_1","image","sipiBasePath","imageServerIIIFBaseURL","imageFilename","width","dimX","height","dimY","push","tileSource","@context","@id","profile","protocol","tiles","scaleFactors","ngOnChanges","changes","isFirstChange","setupViewer","openImages","renderRegions","ngOnDestroy","viewer","destroy","undefined","updateImages","gotoLeft","imageRangeStart","imageChangeInterval","imageRangeEnd","gotoRight","_this","images","remainingDiff","msg","numberOfImages","remainingImages","emit","updateRegions","viewerContainer","nativeElement","getElementsByClassName","osdOptions","element","sequenceMode","showReferenceStrip","showNavigator","zoomInButton","zoomOutButton","previousButton","nextButton","homeButton","fullPageButton","rotateLeftButton","rotateRightButton","OpenSeadragon","Viewer","addHandler","fullScreen","classList","add","remove","eventSource","svgOverlay","resize","fileValues","map","img","slice","clearOverlays","open","aspectRatio","geometries","reg","geomForReg","sort","geom1","geom2","geometries_1","geometries_1_1","this_1","createSVGOverlay","id","label","_b","_c","regionIri","xOffset","toolTip","svgElement","lineColor","lineWidth","document","createElementNS","addSVGAttributesRectangle","addSVGAttributesPolygon","addSVGAttributesCircle","random","setAttribute","addEventListener","svgTitle","textContent","svgGroup","appendChild","node","pointA","pointB","positionUL","Point2D","positionLR","viewCoordPoints","image2ViewPortCoords","pointsString","createSVGPolygonPointsAttribute","cx","String","cy","radius","sqrt","point","hasOwnProperty","ElementRef","Input","Output","TextComponent","BooleanValueComponent","Object","defineProperty","_booleanValueObj","ColorValueComponent","_colorValueObj","DateValueComponent","_calendar","_era","_dateValueObj","dateOrRange","valueObject","getDateSalsah","DateRangeSalsah","period","dates","getJSDate","start","end","date","precision","Precision","yearPrecision","format","Date","year","toString","era","calendar","monthPrecision","month","dayPrecision","day","error","DecimalValueComponent","_decimalValueObj","ExternalResValueComponent","GeometryValueComponent","_geomValueObj","GeonameValueComponent","IntegerValueComponent","_integerValueObj","IntervalValueComponent","_intervalValueObj","LinkValueComponent","referredResourceClicked","_ontoInfo","_linkValueObj","referredResource","referredResourceIri","refResClicked","ListValueComponent","_listValueObj","TextValueAsHtmlComponent","el","_bindEvents","_htmlValueObj","innerHTML","html","refResourceIri","onClick","targetElement","nodeName","toLowerCase","className","indexOf","SalsahLink","href","bindEvents","window","HostListener","TextValueAsStringComponent","_textStringValueObj","TextValueAsXmlComponent","_xmlValueObj","TextfileValueComponent","_textfileValueObj","UriValueComponent","__uriValueObj","CompareViewComponent","GraphViewComponent","GridViewComponent","ListViewComponent","PropertiesViewComponent","jsonld","require","ResourceViewComponent","_route","_resourceService","_cacheService","_incomingService","iri","routeParams","snapshot","params","getResource","subscribe","result","body","promises","compact","then","compacted","resourceSeq","ConvertJSONLD","createReadResourcesSequenceFromJsonLD","resources","resourceClassIris","getResourceClassesFromJsonLD","getResourceClassDefinitions","resourceClassInfos","ontologyInfo","resource","err","errorMessage","ActivatedRoute","ResourceService","OntologyCacheService","IncomingService","TableViewComponent","KuiViewerModule","NgModule","imports","CommonModule","KuiCoreModule","KuiActionModule","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatDatepickerModule","MatFormFieldModule","MatInputModule","MatIconModule","MatListModule","MatNativeDateModule","MatSlideToggleModule","MatToolbarModule","MatTooltipModule","ReactiveFormsModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-annotation',\n  template: `<p>\n  annotation works!\n</p>\n`,\n  styles: [``]\n})\nexport class AnnotationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-audio',\n  template: `<p>\n  audio works!\n</p>\n`,\n  styles: [``]\n})\nexport class AudioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-collection',\n  template: `<p>\n  collection works!\n</p>\n`,\n  styles: [``]\n})\nexport class CollectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-ddd',\n  template: `<p>\n  ddd works!\n</p>\n`,\n  styles: [``]\n})\nexport class DddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-document',\n  template: `<p>\n  document works!\n</p>\n`,\n  styles: [``]\n})\nexport class DocumentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-link-obj',\n  template: `<p>\n  link-obj works!\n</p>\n`,\n  styles: [``]\n})\nexport class LinkObjComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-moving-image',\n  template: `<p>\n  moving-image works!\n</p>\n`,\n  styles: [``]\n})\nexport class MovingImageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-object',\n  template: `<p>\n  object works!\n</p>`,\n  styles: [``]\n})\nexport class ObjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-region',\n  template: `<p>\n  region works!\n</p>\n`,\n  styles: [``]\n})\nexport class RegionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChange\n} from '@angular/core';\nimport {\n    KnoraConstants,\n    Point2D,\n    ReadGeomValue,\n    ReadResource,\n    ReadStillImageFileValue,\n    RegionGeometry\n} from '@knora/core';\n\n\n// This component needs the openseadragon library itself, as well as the openseadragon plugin openseadragon-svg-overlay\n// Both libraries are installed via package.json, and loaded globally via the script tag in .angular-cli.json\n\n// OpenSeadragon does not export itself as ES6/ECMA2015 module,\n// it is loaded globally in scripts tag of angular-cli.json,\n// we still need to declare the namespace to make TypeScript compiler happy.\ndeclare let OpenSeadragon: any;\n\n/**\n * Represents a region.\n * Contains a reference to the resource representing the region and its geometries.\n */\nexport class ImageRegion {\n\n    /**\n     *\n     * @param regionResource a resource of type Region\n     */\n    constructor(readonly regionResource: ReadResource) {\n\n    }\n\n    /**\n     * Get all geometry information belonging to this region.\n     *\n     * @returns\n     */\n    getGeometries() {\n        return this.regionResource.properties[KnoraConstants.hasGeometry] as ReadGeomValue[];\n    }\n}\n\n/**\n * Represents an image including its regions.\n */\nexport class StillImageRepresentation {\n\n    /**\n     *\n     * @param stillImageFileValue a [[ReadStillImageFileValue]] representing an image.\n     * @param regions the regions belonging to the image.\n     */\n    constructor(readonly stillImageFileValue: ReadStillImageFileValue, readonly regions: ImageRegion[]) {\n\n    }\n\n}\n\n/**\n * Sends a requests to the parent component to load more StillImageRepresentations.\n */\nexport class RequestStillImageRepresentations {\n\n    /**\n     *\n     * @param offsetChange the relative change of the offset in order to get more incoming StillImageRepresentations for the resource currently being displayed. Either 1 or -1.\n     * @param whenLoadedCB a callback function that is called when more incoming StillImageRepresentations have been requested and the answer arrived from the server.\n     */\n    constructor(readonly offsetChange: number, readonly whenLoadedCB: (numberOfImages: number) => void) {\n    }\n}\n\n/**\n * Represents a geometry belonging to a specific region.\n */\nexport class GeometryForRegion {\n\n    /**\n     *\n     * @param geometry the geometrical information.\n     * @param region the region the geometry belongs to.\n     */\n    constructor(readonly geometry: RegionGeometry, readonly region: ReadResource) {\n    }\n\n}\n\n/**\n * This component creates a OpenSeadragon viewer instance.\n * Accepts an array of ReadResource containing (among other resources) ReadStillImageFileValues to be rendered.\n * @member resources - resources containing (among other resources) the StillImageFileValues and incoming regions to be rendered. (Use as angular @Input data binding property.)\n */\n@Component({\n    selector: 'kui-still-image',\n    template: `<div class=\"still-image-viewer\">\n    <div class=\"navigation left\">\n        <button mat-button class=\"full-size\" id=\"KUI_OSD_PREV_PAGE\">\n            <mat-icon>keyboard_arrow_left</mat-icon>\n        </button>\n    </div>\n\n    <!-- main content with navigation and osd viewer -->\n    <div class=\"content\">\n\n        <!-- header with image tools -->\n        <mat-toolbar class=\"header\">\n            <mat-toolbar-row>\n                <!-- home button -->\n                <span>\n                <button mat-icon-button id=\"KUI_OSD_HOME\"><mat-icon>home</mat-icon></button>\n            </span>\n                <!-- zoom buttons -->\n                <span class=\"fill-remaining-space\"></span>\n                <span>\n                <button mat-icon-button id=\"KUI_OSD_ZOOM_IN\"><mat-icon>add</mat-icon></button>\n                <button mat-icon-button id=\"KUI_OSD_ZOOM_OUT\"><mat-icon>remove</mat-icon></button>\n            </span>\n                <!-- window button -->\n                <span class=\"fill-remaining-space\"></span>\n                <span>\n                <button mat-icon-button id=\"KUI_OSD_FULL_PAGE\"><mat-icon>fullscreen</mat-icon></button>\n            </span>\n            </mat-toolbar-row>\n        </mat-toolbar>\n\n        <!-- openseadragon (osd) viewer -->\n        <div class=\"osd-container\"></div>\n        <!-- /openseadragon (osd) -->\n        <!-- footer for copyright info; download button etc. -->\n        <div class=\"footer\">\n            <p class=\"mat-caption\" [innerHtml]=\"imageCaption\"></p>\n        </div>\n\n    </div>\n\n    <div class=\"navigation right\">\n        <button mat-button class=\"full-size\" id=\"KUI_OSD_NEXT_PAGE\">\n            <mat-icon>keyboard_arrow_right</mat-icon>\n        </button>\n    </div>\n\n</div>\n\n<!-- simple image viewer e.g. as a preview -->\n<!-- TODO: handle images array -->\n<!--<img *ngIf=\"simple && images?.length === 1; else osdViewer\" [src]=\"simpleImageExample\">-->\n\n\n<!--\n    <div>\n        <span *ngIf=\"images.length > 1\" (click)=\"gotoLeft()\">&lt;&lt;</span>\n        <span *ngIf=\"images.length > 1\" (click)=\"gotoRight()\">&gt;&gt;</span>\n    </div>\n-->\n\n\n\n`,\n    styles: [`.still-image-viewer{display:inline-flex;height:400px;max-width:800px;width:100%}@media (max-height:636px){.still-image-viewer{height:300px}}.still-image-viewer .navigation{height:calc(400px + 64px + 24px);width:36px}.still-image-viewer .navigation .mat-button.full-size{height:100%!important;width:36px!important;padding:0!important;min-width:36px!important}.still-image-viewer .content{height:calc(400px + 64px + 24px);max-width:calc(800px - (2 * 36px));width:calc(100% - (2 * 36px))}.still-image-viewer .content .osd-container{color:#ccc;background-color:#000;height:400px}.still-image-viewer .content .osd-container.fullscreen{max-width:100vw}.still-image-viewer .content .footer p{color:#ccc;background-color:#000;height:24px;margin:0;padding:0 16px}/deep/ .roi-svgoverlay{opacity:.4;fill:transparent;stroke:#00695c;stroke-width:2px;vector-effect:non-scaling-stroke}.roi-svgoverlay:focus,/deep/ .roi-svgoverlay:hover{opacity:1}`]\n})\nexport class StillImageComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input() images: StillImageRepresentation[];\n    @Input() imageRangeStart: number;  // index first image of this.images to be displayed\n    @Input() imageRangeEnd: number; // index of last image of this.images to be displayed.\n    @Input() imageChangeInterval: number; // the size of the interval when displaying more images of this.images\n\n    @Input() imageCaption?: string;\n\n    @Output() getImages = new EventEmitter<RequestStillImageRepresentations>(); // sends a message to the parent component (object.component) to load the next or previous page of results (images) from the server\n    @Output() regionHovered = new EventEmitter<string>();\n\n    // the paging limit should be defined in the configuration of the app\n    pagingLimit: number = 25;\n\n\n    private viewer;\n\n    /**\n     * Calculates the surface of a rectangular region.\n     *\n     * @param geom the region's geometry.\n     * @returns the surface.\n     */\n    private static surfaceOfRectangularRegion(geom: RegionGeometry): number {\n\n        if (geom.type !== 'rectangle') {\n            console.log('expected rectangular region, but ' + geom.type + ' given');\n            return 0;\n        }\n\n        const w = Math.max(geom.points[0].x, geom.points[1].x) - Math.min(geom.points[0].x, geom.points[1].x);\n        const h = Math.max(geom.points[0].y, geom.points[1].y) - Math.min(geom.points[0].y, geom.points[1].y);\n\n        return w * h;\n\n    }\n\n    /**\n     * Prepare tile sources from the given sequence of [[ReadStillImageFileValue]].\n     *\n     * @param imagesToDisplay the given file values to de displayed.\n     * @returns the tile sources to be passed to OSD viewer.\n     */\n    private static prepareTileSourcesFromFileValues(imagesToDisplay: ReadStillImageFileValue[]): Object[] {\n        let imageXOffset = 0;\n        let imageYOffset = 0;\n        const tileSources = [];\n\n        for (const image of imagesToDisplay) {\n            const sipiBasePath = image.imageServerIIIFBaseURL + '/' + image.imageFilename;\n            const width = image.dimX;\n            const height = image.dimY;\n\n            // construct OpenSeadragon tileSources according to https://openseadragon.github.io/docs/OpenSeadragon.Viewer.html#open\n            tileSources.push({\n                // construct IIIF tileSource configuration according to\n                // http://iiif.io/api/image/2.1/#technical-properties\n                // see also http://iiif.io/api/image/2.0/#a-implementation-notes\n                'tileSource': {\n                    '@context': 'http://iiif.io/api/image/2/context.json',\n                    '@id': sipiBasePath,\n                    'height': height,\n                    'width': width,\n                    'profile': ['http://iiif.io/api/image/2/level2.json'],\n                    'protocol': 'http://iiif.io/api/image',\n                    'tiles': [{\n                        'scaleFactors': [1, 2, 4, 8, 16, 32],\n                        'width': 1024\n                    }]\n                },\n                'x': imageXOffset,\n                'y': imageYOffset\n            });\n\n            imageXOffset++;\n\n            // 5 images per row\n            /*\n            if (imageXOffset % 5 === 0) {\n                imageYOffset += 2;\n                imageXOffset = 0;\n            }*/\n        }\n\n        return tileSources;\n    }\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n    ngOnChanges(changes: { [key: string]: SimpleChange }) {\n        if (changes['images'] && changes['images'].isFirstChange()) {\n            this.setupViewer();\n        }\n        if (changes['images']) {\n            this.openImages();\n            this.renderRegions();\n        }\n    }\n\n    ngOnInit() {\n        // initialisation is done on first run of ngOnChanges\n    }\n\n    ngOnDestroy() {\n        if (this.viewer) {\n            this.viewer.destroy();\n            this.viewer = undefined;\n        }\n    }\n\n    /**\n     * Renders all ReadStillImageFileValues to be found in [[this.images]].\n     * (Although this.images is a Angular Input property, the built-in change detection of Angular does not detect changes in complex objects or arrays, only reassignment of objects/arrays.\n     * Use this method if additional ReadStillImageFileValues were added to this.images after creation/assignment of the this.images array.)\n     */\n    updateImages() {\n        if (!this.viewer) {\n            this.setupViewer();\n        }\n        this.openImages();\n    }\n\n    /**\n     * Get the more images from the server by requesting the previous page of results for the current resource (decrease offset).\n     */\n    private gotoLeft() {\n\n        // TODO: move left on this.images\n        // TODO: if necessary, request more images from the server\n\n        if (this.imageRangeStart - this.imageChangeInterval >= 0) {\n            // this.images has more images to display\n            this.imageRangeStart -= this.imageChangeInterval;\n            this.imageRangeEnd -= this.imageChangeInterval;\n\n            this.openImages();\n            this.renderRegions();\n        } else if (this.imageRangeStart > 0) {\n            // fewer remaining images than interval, show remaining images\n            this.imageRangeEnd -= this.imageRangeStart;\n            this.imageRangeStart = 0;\n\n            this.openImages();\n            this.renderRegions();\n        }\n        {\n            // this.images cannot display more images of length interval\n            // request more images from the server using a negative offset\n\n            // TODO: implement getting previous offset (also in parent component)\n        }\n\n    }\n\n    /**\n     * Get the more images from the server by requesting the next page of results for the current resource (increase offset).\n     */\n    private gotoRight() {\n\n        if (this.imageRangeEnd < this.images.length - 1) {\n            // this.images has more images to display\n\n            if (this.imageRangeEnd + this.imageChangeInterval < this.images.length) {\n                // the whole next interval can be displayed\n                console.log(`display next interval`);\n\n                this.imageRangeStart += this.imageChangeInterval;\n                this.imageRangeEnd += this.imageChangeInterval;\n            } else {\n                console.log(`display remaining images`);\n                // less than the interval can be displayed just display remaining images\n                const remainingDiff = this.images.length - this.imageRangeEnd + 1;\n\n                this.imageRangeStart += remainingDiff;\n                this.imageRangeEnd += remainingDiff;\n\n                // TODO: deactivate next button\n\n            }\n\n            this.openImages();\n            this.renderRegions();\n\n        } else if (this.images.length % this.pagingLimit === 0) { // paging always returned full result lists, so there could be more data to fetch\n            console.log(`request more images`);\n            // this.images cannot display more images of length interval\n            // request more images from the server using a positive offset\n\n            // function called when parent component loaded new images\n            const callback = (numberOfImages: number) => {\n\n                if (numberOfImages >= this.imageChangeInterval) {\n                    // more images were loaded than are actually to be displayed\n\n                    this.imageRangeStart += this.imageChangeInterval;\n                    this.imageRangeEnd += this.imageChangeInterval;\n\n                    this.openImages();\n                    this.renderRegions();\n                } else if (numberOfImages > 0) {\n                    // the amount of new images in less than the interval, show everything that can be shown\n\n                    this.imageRangeStart += numberOfImages;\n                    this.imageRangeEnd += numberOfImages;\n\n                    this.openImages();\n                    this.renderRegions();\n                } else {\n                    // no new images could be returned, display remaining images (there are fewer than this.imageChangeInterval)\n                    const remainingImages: number = this.images.length - 1 - this.imageRangeEnd;\n\n                    this.imageRangeStart += remainingImages;\n                    this.imageRangeEnd += remainingImages;\n\n                    // TODO: no new images can be loaded -> deactivate control in GUI (note that perhaps sufficient permissions were missing, so we actually cannot be sure that higher offsets still deliver images)\n\n                    this.openImages();\n                    this.renderRegions();\n\n                }\n\n\n            };\n\n            const msg = new RequestStillImageRepresentations(1, callback);\n\n            this.getImages.emit(msg);\n\n        } else {\n            // no more data to fetch\n            // TODO: deactivate next button\n\n        }\n    }\n\n    /**\n     * Renders all regions to be found in [[this.images]].\n     * (Although this.images is a Angular Input property, the built-in change detection of Angular does not detect changes in complex objects or arrays, only reassignment of objects/arrays.\n     * Use this method if additional regions were added to the resources.images)\n     */\n    updateRegions() {\n        if (!this.viewer) {\n            this.setupViewer();\n        }\n        this.renderRegions();\n    }\n\n    /**\n     * Initializes the OpenSeadragon viewer\n     */\n    private setupViewer(): void {\n        const viewerContainer = this.elementRef.nativeElement.getElementsByClassName('osd-container')[0];\n        const osdOptions = {\n            element: viewerContainer,\n            sequenceMode: true,\n            showReferenceStrip: true,\n            showNavigator: true,\n            zoomInButton: 'KUI_OSD_ZOOM_IN',\n            zoomOutButton: 'KUI_OSD_ZOOM_OUT',\n            previousButton: 'KUI_OSD_PREV_PAGE',\n            nextButton: 'KUI_OSD_NEXT_PAGE',\n            homeButton: 'KUI_OSD_HOME',\n            fullPageButton: 'KUI_OSD_FULL_PAGE',\n            rotateLeftButton: 'KUI_OSD_ROTATE_LEFT',        // doesn't work yet\n            rotateRightButton: 'KUI_OSD_ROTATE_RIGHT'       // doesn't work yet\n\n        };\n        this.viewer = new OpenSeadragon.Viewer(osdOptions);\n        this.viewer.addHandler('full-screen', function (args) {\n            if (args.fullScreen) {\n                viewerContainer.classList.add('fullscreen');\n            } else {\n                viewerContainer.classList.remove('fullscreen');\n            }\n        });\n        this.viewer.addHandler('resize', function (args) {\n            args.eventSource.svgOverlay().resize();\n        });\n\n    }\n\n    /**\n     * Adds all images in this.images to the viewer.\n     * Images are positioned in a horizontal row next to each other.\n     */\n    private openImages(): void {\n        // imageXOffset controls the x coordinate of the left side of each image in the OpenSeadragon viewport coordinate system.\n        // The first image has its left side at x = 0, and all images are scaled to have a width of 1 in viewport coordinates.\n        // see also: https://openseadragon.github.io/examples/viewport-coordinates/\n\n        const fileValues: ReadStillImageFileValue[] = this.images.map(\n            (img) => {\n                return img.stillImageFileValue;\n            });\n\n        // display only the defined range of this.images\n        const tileSources: Object[] = StillImageComponent.prepareTileSourcesFromFileValues(fileValues.slice(this.imageRangeStart, this.imageRangeEnd + 1));\n\n        this.viewer.clearOverlays();\n        this.viewer.open(tileSources);\n    }\n\n    /**\n     * Adds a ROI-overlay to the viewer for every region of every image in this.images\n     */\n    private renderRegions(): void {\n        this.viewer.clearOverlays();\n\n        let imageXOffset = 0; // see documentation in this.openImages() for the usage of imageXOffset\n\n        for (const image of this.images) {\n            const aspectRatio = (image.stillImageFileValue.dimY / image.stillImageFileValue.dimX);\n\n            // collect all geometries belonging to this page\n            let geometries: GeometryForRegion[] = [];\n            image.regions.map((reg) => {\n\n                let geoms = reg.getGeometries();\n\n                geoms.map((geom) => {\n                    let geomForReg = new GeometryForRegion(geom.geometry, reg.regionResource);\n\n                    geometries.push(geomForReg);\n                });\n            });\n\n            // sort all geometries belonging to this page\n            geometries.sort((geom1, geom2) => {\n\n                if (geom1.geometry.type === 'rectangle' && geom2.geometry.type === 'rectangle') {\n\n                    const surf1 = StillImageComponent.surfaceOfRectangularRegion(geom1.geometry);\n                    const surf2 = StillImageComponent.surfaceOfRectangularRegion(geom2.geometry);\n\n                    // if reg1 is smaller than reg2, return 1\n                    // reg1 then comes after reg2 and thus is rendered later\n                    if (surf1 < surf2) {\n                        return 1;\n                    } else {\n                        return -1;\n                    }\n\n                } else {\n                    return 0;\n                }\n\n\n            });\n\n            // render all geometries for this page\n            for (let geom of geometries) {\n\n                let geometry = geom.geometry;\n                this.createSVGOverlay(geom.region.id, geometry, aspectRatio, imageXOffset, geom.region.label);\n\n            }\n\n            imageXOffset++;\n        }\n\n    }\n\n    /**\n     * Creates and adds a ROI-overlay to the viewer\n     * @param regionIri the Iri of the region.\n     * @param geometry - the geometry describing the ROI\n     * @param aspectRatio -  the aspectRatio (h/w) of the image on which the geometry should be placed\n     * @param xOffset -  the x-offset in Openseadragon viewport coordinates of the image on which the geometry should be placed\n     * @param toolTip -  the tooltip which should be displayed on mousehover of the svg element\n     */\n    private createSVGOverlay(regionIri: string, geometry: RegionGeometry, aspectRatio: number, xOffset: number, toolTip: string): void {\n        const lineColor = geometry.lineColor;\n        const lineWidth = geometry.lineWidth;\n\n        let svgElement;\n        switch (geometry.type) {\n            case 'rectangle':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');  // yes, we render rectangles as svg polygon elements\n                this.addSVGAttributesRectangle(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            case 'polygon':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n                this.addSVGAttributesPolygon(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            case 'circle':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n                this.addSVGAttributesCircle(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            default:\n                console.log('ERROR: StillImageOSDViewerComponent.createSVGOverlay: unknown geometryType: ' + geometry.type);\n                return;\n        }\n        svgElement.id = 'roi-svgoverlay-' + Math.random() * 10000;\n        svgElement.setAttribute('class', 'roi-svgoverlay');\n        svgElement.setAttribute('style', 'stroke: ' + lineColor + '; stroke-width: ' + lineWidth + 'px;');\n\n        // event when a region is hovered (output)\n        svgElement.addEventListener('mouseover', () => {\n                this.regionHovered.emit(regionIri);\n            }, false);\n\n        const svgTitle = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n        svgTitle.textContent = toolTip;\n\n        const svgGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        svgGroup.appendChild(svgTitle);\n        svgGroup.appendChild(svgElement);\n\n        const overlay = this.viewer.svgOverlay();\n        overlay.node().appendChild(svgGroup);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'rectangle' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'polygon' (sic))\n     * @param geometry - the geometry describing the rectangle\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesRectangle(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const pointA = geometry.points[0];\n        const pointB = geometry.points[1];\n\n        // geometry.points contains two diagonally opposed corners of the rectangle, but the order of the corners is arbitrary.\n        // We therefore construct the upperleft (UL), lowerright (LR), upperright (UR) and lowerleft (LL) positions of the corners with min and max operations.\n        const positionUL = new Point2D(Math.min(pointA.x, pointB.x), Math.min(pointA.y, pointB.y));\n        const positionLR = new Point2D(Math.max(pointA.x, pointB.x), Math.max(pointA.y, pointB.y));\n        const positionUR = new Point2D(Math.max(pointA.x, pointB.x), Math.min(pointA.y, pointB.y));\n        const positionLL = new Point2D(Math.min(pointA.x, pointB.x), Math.max(pointA.y, pointB.y));\n\n        const points = [positionUL, positionUR, positionLR, positionLL];\n        const viewCoordPoints = this.image2ViewPortCoords(points, aspectRatio, xOffset);\n        const pointsString = this.createSVGPolygonPointsAttribute(viewCoordPoints);\n        svgElement.setAttribute('points', pointsString);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'polygon' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'polygon')\n     * @param geometry - the geometry describing the polygon\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesPolygon(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const viewCoordPoints = this.image2ViewPortCoords(geometry.points, aspectRatio, xOffset);\n        const pointsString = this.createSVGPolygonPointsAttribute(viewCoordPoints);\n        svgElement.setAttribute('points', pointsString);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'circle' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'circle')\n     * @param geometry - the geometry describing the circle\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesCircle(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const viewCoordPoints = this.image2ViewPortCoords(geometry.points, aspectRatio, xOffset);\n        const cx = String(viewCoordPoints[0].x);\n        const cy = String(viewCoordPoints[0].y);\n        // geometry.radius contains not the radius itself, but the coordinates of a (arbitrary) point on the circle.\n        // We therefore have to calculate the length of the vector geometry.radius to get the actual radius. -> sqrt(x^2 + y^2)\n        // Since geometry.radius has its y coordinate scaled to the height of the image,\n        // we need to multiply it with the aspectRatio to get to the scale used by Openseadragon, analoguous to this.image2ViewPortCoords()\n        const radius = String(Math.sqrt(geometry.radius.x * geometry.radius.x + aspectRatio * aspectRatio * geometry.radius.y * geometry.radius.y));\n        svgElement.setAttribute('cx', cx);\n        svgElement.setAttribute('cy', cy);\n        svgElement.setAttribute('r', radius);\n    }\n\n    /**\n     * Maps a Point2D[] with coordinates relative to an image to a new Point2D[] with coordinates in the viewport coordinate system of Openseadragon\n     * see also: https://openseadragon.github.io/examples/viewport-coordinates/\n     * @param points - an array of points in coordinate system relative to an image\n     * @param aspectRatio - the aspectRatio (h/w) of the image\n     * @param xOffset - the x-offset in viewport coordinates of the image\n     * @returns - a new Point2D[] with coordinates in the viewport coordinate system of Openseadragon\n     */\n    private image2ViewPortCoords(points: Point2D[], aspectRatio: number, xOffset: number): Point2D[] {\n        return points.map((point) => {\n            return new Point2D(point.x + xOffset, point.y * aspectRatio);\n        });\n    }\n\n    /**\n     * Returns a string in the format expected by the 'points' attribute of a SVGElement\n     * @param points - an array of points to be serialized to a string\n     * @returns - the points serialized to a string in the format expected by the 'points' attribute of a SVGElement\n     */\n    private createSVGPolygonPointsAttribute(points: Point2D[]): string {\n        let pointsString = '';\n        for (const i in points) {\n            if (points.hasOwnProperty(i)) {\n                pointsString += points[i].x;\n                pointsString += ',';\n                pointsString += points[i].y;\n                pointsString += ' ';\n            }\n        }\n        return pointsString;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-text',\n  template: `<p>\n  text works!\n</p>\n`,\n  styles: [``]\n})\nexport class TextComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadBooleanValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-boolean-value',\n  template: `<mat-checkbox [checked]=\"valueObject.bool\" disabled=\"true\"></mat-checkbox>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class BooleanValueComponent {\n\n  @Input()\n  set valueObject(value: ReadBooleanValue) {\n      this._booleanValueObj = value;\n  }\n\n  get valueObject() {\n      return this._booleanValueObj;\n  }\n\n  private _booleanValueObj: ReadBooleanValue;\n\n  constructor() { }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadColorValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-color-value',\n    template: `<span [style.background-color]=\"valueObject.colorHex\">{{valueObject.colorHex}}</span>`,\n    styles: [`.fill-remaining-space{flex:1 1 auto}.mat-form-field{width:36px;overflow-x:visible}`]\n})\nexport class ColorValueComponent {\n\n    @Input()\n    set valueObject(value: ReadColorValue) {\n        this._colorValueObj = value;\n    }\n\n    get valueObject() {\n        return this._colorValueObj;\n    }\n\n    private _colorValueObj: ReadColorValue;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { DateRangeSalsah, DateSalsah, Precision, ReadDateValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-date-value',\n  template: `<span *ngIf=\"period; else preciseDate\">\n    {{dates[0].date | date: dates[0].format}}\n    <span *ngIf=\"era\">\n        {{dates[0].era}}\n    </span>\n    - {{dates[1].date | date: dates[1].format}}\n    <span *ngIf=\"era\">\n        {{dates[1].era}}\n    </span>\n\n    <span *ngIf=\"calendar\">\n        ({{dates[0].calendar}})\n    </span>\n</span>\n\n<ng-template #preciseDate>\n\n    <span>\n        {{dates[0].date | date: dates[0].format }}\n        <span *ngIf=\"era\">\n            {{dates[0].era}}\n        </span>\n        <span *ngIf=\"calendar\">\n            ({{dates[0].calendar}})\n        </span>\n    </span>\n\n</ng-template>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class DateValueComponent {\n\n  @Input()\n  set calendar(value: boolean) {\n    this._calendar = value;\n  }\n\n  get calendar() {\n    return this._calendar;\n  }\n\n  @Input()\n  set era(value: boolean) {\n    this._era = value;\n  }\n\n  get era() {\n    return this._era;\n  }\n\n  @Input()\n  set valueObject(value: ReadDateValue) {\n    this._dateValueObj = value;\n\n    const dateOrRange: DateSalsah | DateRangeSalsah = this.valueObject.getDateSalsah();\n    if (dateOrRange instanceof DateRangeSalsah) {\n      // period (start and end dates)\n      this.period = true;\n      this.dates = [this.getJSDate(dateOrRange.start), this.getJSDate(dateOrRange.end)];\n    } else {\n      // single date\n      this.period = false;\n      this.dates = [this.getJSDate(dateOrRange)];\n    }\n\n  }\n\n  get valueObject() {\n    return this._dateValueObj;\n  }\n\n  dates: DateFormatter[];\n  period: boolean;\n  private _calendar: boolean;\n  private _era: boolean;\n  private _dateValueObj: ReadDateValue;\n\n  constructor() { }\n\n  /**\n   * Converts a `DateSalsah` to a JS Date, providing necessary formatting information.\n   * JULIAN and GREGORIAN calendar are the only available for the moment.\n   *\n   * @param date the date to be converted.\n   * @return DateFormatter.\n   */\n  getJSDate(date: DateSalsah): DateFormatter {\n\n    if (date.precision === Precision.yearPrecision) {\n      return {\n        format: 'yyyy',\n        date: new Date(date.year.toString()),\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else if (date.precision === Precision.monthPrecision) {\n      return {\n        format: 'MMMM ' + 'yyyy',\n        date: new Date(date.year, date.month - 1, 1), // 0 base month\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else if (date.precision === Precision.dayPrecision) {\n      return {\n        format: 'longDate',\n        date: new Date(date.year, date.month - 1, date.day),  // 0 base month\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else {\n      console.error('Error: incorrect precision for date');\n    }\n\n  }\n\n}\n\n/**\n * Date structure for the template\n */\nexport interface DateFormatter {\n  format: string;\n  date: Date;\n  era: string;\n  calendar: string;\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadDecimalValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-decimal-value',\n  template: `<span>{{valueObject.decimal}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class DecimalValueComponent {\n\n  @Input()\n  set valueObject(value: ReadDecimalValue) {\n    this._decimalValueObj = value;\n  }\n\n  get valueObject() {\n    return this._decimalValueObj;\n  }\n\n  private _decimalValueObj: ReadDecimalValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-external-res-value',\n  template: `<p>\n  external-res-value works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class ExternalResValueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadGeomValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-geometry-value',\n  template: `<span>{{valueObject.geometryString}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class GeometryValueComponent {\n\n  @Input()\n  set valueObject(value: ReadGeomValue) {\n    this._geomValueObj = value;\n  }\n\n  get valueObject() {\n    return this._geomValueObj;\n  }\n\n  private _geomValueObj: ReadGeomValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-geoname-value',\n  template: `<p>\n  geoname-value works!\n</p>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class GeonameValueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadIntegerValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-integer-value',\n    template: `<span>{{valueObject.integer}}</span>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class IntegerValueComponent {\n\n    @Input()\n    set valueObject(value: ReadIntegerValue) {\n        this._integerValueObj = value;\n    }\n\n    get valueObject() {\n        return this._integerValueObj;\n    }\n\n    private _integerValueObj: ReadIntegerValue;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadIntervalValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-interval-value',\n  template: `<span>{{valueObject.intervalStart}} - {{valueObject.intervalEnd}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class IntervalValueComponent {\n\n  @Input()\n  set valueObject(value: ReadIntervalValue) {\n    this._intervalValueObj = value;\n  }\n\n  get valueObject() {\n    return this._intervalValueObj;\n  }\n\n  private _intervalValueObj: ReadIntervalValue;\n\n  constructor() { }\n\n}\n","import { Component, Inject, Input, Output, EventEmitter } from '@angular/core';\nimport { OntologyInformation, ReadLinkValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-link-value',\n    template: `<a class=\"salsah-link\" (click)=\"refResClicked()\">{{referredResource}}</a>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class LinkValueComponent {\n\n    @Input()\n    set ontologyInfo(value: OntologyInformation) {\n        this._ontoInfo = value;\n    }\n\n    get ontologyInfo() {\n        return this._ontoInfo;\n    }\n\n    @Input()\n    set valueObject(value: ReadLinkValue) {\n        this._linkValueObj = value;\n\n        if (this.valueObject.referredResource !== undefined) {\n            this.referredResource = this.valueObject.referredResource.label;\n        } else {\n            this.referredResource = this.valueObject.referredResourceIri;\n        }\n    }\n\n    get valueObject() {\n        return this._linkValueObj;\n    }\n\n    @Output()\n    referredResourceClicked: EventEmitter<ReadLinkValue> = new EventEmitter();\n\n    private _linkValueObj: ReadLinkValue;\n    private _ontoInfo: OntologyInformation;\n    referredResource: string;\n\n    constructor() { }\n\n    refResClicked() {\n        this.referredResourceClicked.emit(this._linkValueObj);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadListValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-list-value',\n  template: `<span>{{valueObject.listNodeLabel}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class ListValueComponent {\n\n  @Input()\n  set valueObject(value: ReadListValue) {\n    this._listValueObj = value;\n  }\n\n  get valueObject() {\n    return this._listValueObj;\n  }\n\n  private _listValueObj: ReadListValue;\n\n  constructor() { }\n\n}\n","import { Component, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { OntologyInformation, ReadTextValueAsHtml, KnoraConstants } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-html',\n    template: `<div>{{valueObject.html}}</div>`,\n    styles: [``]\n})\nexport class TextValueAsHtmlComponent {\n\n    @Output()\n    referredResourceClicked: EventEmitter<string> = new EventEmitter();\n\n    @Input()\n    set ontologyInfo(value: OntologyInformation) {\n        this._ontoInfo = value;\n    }\n\n    get ontologyInfo() {\n        return this._ontoInfo;\n    }\n\n    @Input()\n    set bindEvents(value: Boolean) {\n        this._bindEvents = value;\n    }\n\n    get bindEvents() {\n        return this._bindEvents;\n    }\n\n    @Input()\n    set valueObject(value: ReadTextValueAsHtml) {\n        this._htmlValueObj = value;\n\n        if (this.el.nativeElement.innerHTML) {\n            this.el.nativeElement.innerHTML = this.valueObject.html;\n        }\n    }\n\n    get valueObject() {\n        return this._htmlValueObj;\n    }\n\n    html: string;\n    private _htmlValueObj: ReadTextValueAsHtml;\n    private _ontoInfo: OntologyInformation;\n    private _bindEvents: Boolean;\n\n    constructor(private el: ElementRef) {\n    }\n\n    refResClicked(refResourceIri: string) {\n        this.referredResourceClicked.emit(refResourceIri);\n    }\n\n    /**\n     * Binds a click event to standoff links that shows the referred resource.\n     *\n     * @param targetElement\n     */\n    @HostListener('click', ['$event.target'])\n    onClick(targetElement) {\n        if (this._bindEvents && targetElement.nodeName.toLowerCase() === 'a'\n            && targetElement.className.toLowerCase().indexOf(KnoraConstants.SalsahLink) >= 0\n            && targetElement.href !== undefined) {\n            this.refResClicked(targetElement.href);\n            // prevent propagation\n            return false;\n        } else if (this.bindEvents && targetElement.nodeName.toLowerCase() === 'a' && targetElement.href !== undefined) {\n            // open link in a new window\n            window.open(targetElement.href, '_blank');\n            // prevent propagation\n            return false;\n        } else {\n            // prevent propagation\n            return false;\n        }\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextValueAsString } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-string',\n    template: `<span>{{valueObject.str}}</span>\n`,\n    styles: [``]\n})\nexport class TextValueAsStringComponent {\n\n    @Input()\n    set valueObject(value: ReadTextValueAsString) {\n        this._textStringValueObj = value;\n    }\n\n    get valueObject() {\n        return this._textStringValueObj;\n    }\n\n    private _textStringValueObj: ReadTextValueAsString;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextValueAsXml } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-xml',\n    template: `<span>{{valueObject.xml}}</span>`,\n    styles: [``]\n})\nexport class TextValueAsXmlComponent {\n\n    @Input()\n    set valueObject(value: ReadTextValueAsXml) {\n        this._xmlValueObj = value;\n    }\n\n    get valueObject() {\n        return this._xmlValueObj;\n    }\n\n    private _xmlValueObj: ReadTextValueAsXml;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextFileValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-textfile-value',\n  template: `<a target=\"_blank\" href=\"{{valueObject.textFileURL}}\">{{valueObject.textFilename}}</a>`,\n  styles: [``]\n})\nexport class TextfileValueComponent {\n\n  @Input()\n  set valueObject(value: ReadTextFileValue) {\n    this._textfileValueObj = value;\n  }\n\n  get valueObject() {\n    return this._textfileValueObj;\n  }\n\n  private _textfileValueObj: ReadTextFileValue;\n\n  constructor() { }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadUriValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-uri-value',\n  template: `<a href=\"{{valueObject.uri}}\" target=\"_blank\">{{valueObject.uri}}</a>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class UriValueComponent {\n\n  @Input()\n  set valueObject(value: ReadUriValue) {\n    this.__uriValueObj = value;\n  }\n\n  get valueObject() {\n    return this.__uriValueObj;\n  }\n\n  private __uriValueObj: ReadUriValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-compare-view',\n  template: `<p>\n  compare-view works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class CompareViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-graph-view',\n  template: `<p>\n  graph-view works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class GraphViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-grid-view',\n  template: `<p>\n  grid-view works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class GridViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-list-view',\n  template: `<p>\n  list-view works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class ListViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'kui-properties-view',\n    template: `<p>\n    properties-view works!\n</p>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class PropertiesViewComponent {\n\n    constructor() { }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n    ApiServiceError,\n    ApiServiceResult,\n    ConvertJSONLD,\n    IncomingService,\n    KnoraConstants,\n    OntologyCacheService,\n    OntologyInformation,\n    ReadResource,\n    ReadResourcesSequence,\n    ResourceService\n} from '@knora/core';\n\ndeclare let require: any;\nconst jsonld = require('jsonld');\n\n@Component({\n    selector: 'kui-resource-view',\n    template: `<mat-card>\n\n    <!-- TODO: switch through the media type -->\n    <kui-still-image></kui-still-image>\n    <kui-moving-image></kui-moving-image>\n    <kui-annotation></kui-annotation>\n    <kui-audio></kui-audio>\n    <kui-collection></kui-collection>\n    <kui-ddd></kui-ddd>\n    <kui-document></kui-document>\n    <kui-link-obj></kui-link-obj>\n    <kui-object></kui-object>\n    <kui-region></kui-region>\n    <kui-text></kui-text>\n\n    <h2>metadata for resource {{ resource?.label}} ({{ resource?.id }})</h2>\n    <h3>type: {{ontologyInfo?.getLabelForResourceClass(resource?.type)}}</h3>\n\n    <div *ngFor=\"let prop of resource?.properties | kuiKey\">\n        <mat-list>\n            <span>{{ontologyInfo?.getLabelForProperty(prop.key)}}</span>\n            <mat-list-item *ngFor=\"let val of prop.value\">\n                <span [ngSwitch]=\"val.getClassName()\">\n                    <kui-color-value *ngSwitchCase=\"KnoraConstants.ReadColorValue\" [valueObject]=\"val\"></kui-color-value>\n                    <kui-text-value-as-html *ngSwitchCase=\"KnoraConstants.ReadTextValueAsHtml\" [valueObject]=\"val\" [ontologyInfo]=\"ontologyInfo\" [bindEvents]=\"true\"></kui-text-value-as-html>\n                    <kui-text-value-as-string *ngSwitchCase=\"KnoraConstants.ReadTextValueAsString\" [valueObject]=\"val\"></kui-text-value-as-string>\n                    <kui-text-value-as-xml *ngSwitchCase=\"KnoraConstants.ReadTextValueAsXml\" [valueObject]=\"val\"></kui-text-value-as-xml>\n                    <kui-date-value *ngSwitchCase=\"KnoraConstants.ReadDateValue\" [valueObject]=\"val\"></kui-date-value>\n                    <kui-link-value *ngSwitchCase=\"KnoraConstants.ReadLinkValue\" [valueObject]=\"val\" [ontologyInfo]=\"ontologyInfo\"></kui-link-value>\n                    <kui-integer-value *ngSwitchCase=\"KnoraConstants.ReadIntegerValue\" [valueObject]=\"val\"></kui-integer-value>\n                    <kui-decimal-value *ngSwitchCase=\"KnoraConstants.ReadDecimalValue\" [valueObject]=\"val\"></kui-decimal-value>\n                    <kui-geometry-value *ngSwitchCase=\"KnoraConstants.ReadGeomValue\" [valueObject]=\"val\"></kui-geometry-value>\n                    <kui-uri-value *ngSwitchCase=\"KnoraConstants.ReadUriValue\" [valueObject]=\"val\"></kui-uri-value>\n                    <kui-boolean-value *ngSwitchCase=\"KnoraConstants.ReadBooleanValue\" [valueObject]=\"val\"></kui-boolean-value>\n                    <kui-interval-value *ngSwitchCase=\"KnoraConstants.ReadIntervalValue\" [valueObject]=\"val\"></kui-interval-value>\n                    <kui-list-value *ngSwitchCase=\"KnoraConstants.ReadListValue\" [valueObject]=\"val\"></kui-list-value>\n                    <kui-textfile-value *ngSwitchCase=\"KnoraConstants.TextFileValue\" [valueObject]=\"val\"></kui-textfile-value>\n                    <span *ngSwitchDefault=\"\">Not supported {{val.getClassName()}}</span>\n                </span>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n</mat-card>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}`]\n})\nexport class ResourceViewComponent implements OnInit {\n\n    @Input() iri?: string = 'http://rdfh.ch/8be1b7cf7103';\n\n    ontologyInfo: OntologyInformation; // ontology information about resource classes and properties present in the requested resource with Iri `iri`\n    resource: ReadResource; // the resource to be displayed\n    errorMessage: any;\n\n    KnoraConstants = KnoraConstants;\n\n    constructor(private _route: ActivatedRoute,\n                private _resourceService: ResourceService,\n                private _cacheService: OntologyCacheService,\n                private _incomingService: IncomingService) {\n\n        const routeParams = this._route.snapshot.params;\n        this.iri = routeParams.id;\n\n    }\n\n    ngOnInit() {\n        this.getResource(this.iri);\n    }\n\n    private getResource(iri: string): void {\n        this._resourceService.getResource(iri)\n            .subscribe(\n                (result: ApiServiceResult) => {\n                    console.log('result: ', result.body);\n                    const promises = jsonld.promises;\n                    // compact JSON-LD using an empty context: expands all Iris\n                    const promise = promises.compact(result.body, {});\n\n                    promise.then((compacted) => {\n\n                        const resourceSeq: ReadResourcesSequence = ConvertJSONLD.createReadResourcesSequenceFromJsonLD(compacted);\n\n                        // make sure that exactly one resource is returned\n                        if (resourceSeq.resources.length === 1) {\n\n                            // get resource class Iris from response\n                            const resourceClassIris: string[] = ConvertJSONLD.getResourceClassesFromJsonLD(compacted);\n\n                            // request ontology information about resource class Iris (properties are implied)\n                            this._cacheService.getResourceClassDefinitions(resourceClassIris).subscribe(\n                                (resourceClassInfos: any) => {\n                                    // initialize ontology information\n                                    this.ontologyInfo = resourceClassInfos; // console.log('initialization of ontologyInfo: ', this.ontologyInfo); > object received\n\n                                    // prepare a possibly attached image file to be displayed\n                                    // this.collectImagesAndRegionsForResource(resourceSeq.resources[0]);\n\n                                    this.resource = resourceSeq.resources[0];\n                                    // console.log('resource: ', this.resource);\n\n                                    // this.requestIncomingResources();\n                                },\n                                (err) => {\n\n                                    console.log('cache request failed: ' + err);\n                                });\n                        } else {\n                            // exactly one resource was expected, but resourceSeq.resources.length != 1\n                            this.errorMessage = `Exactly one resource was expected, but ${resourceSeq.resources.length} resource(s) given.`;\n                        }\n                    }, function (err) {\n                        console.error('JSONLD of full resource request could not be expanded:' + err);\n                    });\n                    // this.isLoading = false;\n                },\n                (error: ApiServiceError) => {\n                    console.error(error);\n                    // this.errorMessage = <any>error;\n                    // this.isLoading = false;\n                });\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-table-view',\n  template: `<p>\n  table-view works!\n</p>\n`,\n  styles: [``]\n})\nexport class TableViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from '@angular/material';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { KuiActionModule } from '@knora/action';\nimport { KuiCoreModule } from '@knora/core';\n\nimport { BooleanValueComponent } from './property/boolean-value/boolean-value.component';\nimport { ColorValueComponent } from './property/color-value/color-value.component';\nimport { DateValueComponent } from './property/date-value/date-value.component';\nimport { DecimalValueComponent } from './property/decimal-value/decimal-value.component';\nimport { ExternalResValueComponent } from './property/external-res-value/external-res-value.component';\nimport { GeometryValueComponent } from './property/geometry-value/geometry-value.component';\nimport { GeonameValueComponent } from './property/geoname-value/geoname-value.component';\nimport { IntegerValueComponent } from './property/integer-value/integer-value.component';\nimport { IntervalValueComponent } from './property/interval-value/interval-value.component';\nimport { LinkValueComponent } from './property/link-value/link-value.component';\nimport { ListValueComponent } from './property/list-value/list-value.component';\nimport { TextValueAsHtmlComponent } from './property/text-value/text-value-as-html/text-value-as-html.component';\nimport { TextValueAsStringComponent } from './property/text-value/text-value-as-string/text-value-as-string.component';\nimport { TextValueAsXmlComponent } from './property/text-value/text-value-as-xml/text-value-as-xml.component';\nimport { TextfileValueComponent } from './property/textfile-value/textfile-value.component';\nimport { UriValueComponent } from './property/uri-value/uri-value.component';\nimport { AnnotationComponent } from './resource/annotation/annotation.component';\nimport { AudioComponent } from './resource/audio/audio.component';\nimport { CollectionComponent } from './resource/collection/collection.component';\nimport { DddComponent } from './resource/ddd/ddd.component';\nimport { DocumentComponent } from './resource/document/document.component';\nimport { LinkObjComponent } from './resource/link-obj/link-obj.component';\nimport { MovingImageComponent } from './resource/moving-image/moving-image.component';\nimport { ObjectComponent } from './resource/object/object.component';\nimport { RegionComponent } from './resource/region/region.component';\nimport { StillImageComponent } from './resource/still-image/still-image.component';\nimport { TextComponent } from './resource/text/text.component';\nimport { CompareViewComponent } from './view/compare-view/compare-view.component';\nimport { GraphViewComponent } from './view/graph-view/graph-view.component';\nimport { GridViewComponent } from './view/grid-view/grid-view.component';\nimport { ListViewComponent } from './view/list-view/list-view.component';\nimport { PropertiesViewComponent } from './view/properties-view/properties-view.component';\nimport { ResourceViewComponent } from './view/resource-view/resource-view.component';\nimport { TableViewComponent } from './view/table-view/table-view.component';\n\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        KuiCoreModule,\n        KuiActionModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatIconModule,\n        MatListModule,\n        MatNativeDateModule,\n        MatSlideToggleModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        AnnotationComponent,\n        AudioComponent,\n        CollectionComponent,\n        DddComponent,\n        DocumentComponent,\n        LinkObjComponent,\n        MovingImageComponent,\n        ObjectComponent,\n        RegionComponent,\n        StillImageComponent,\n        TextComponent,\n        TextValueAsHtmlComponent,\n        TextValueAsStringComponent,\n        TextValueAsXmlComponent,\n        TextfileValueComponent,\n        DateValueComponent,\n        IntegerValueComponent,\n        ColorValueComponent,\n        DecimalValueComponent,\n        UriValueComponent,\n        BooleanValueComponent,\n        GeometryValueComponent,\n        GeonameValueComponent,\n        IntervalValueComponent,\n        ListValueComponent,\n        LinkValueComponent,\n        ExternalResValueComponent,\n        ListViewComponent,\n        GridViewComponent,\n        TableViewComponent,\n        ResourceViewComponent,\n        CompareViewComponent,\n        GraphViewComponent,\n        PropertiesViewComponent\n    ],\n    exports: [\n\n        AnnotationComponent,\n        AudioComponent,\n        CollectionComponent,\n        DddComponent,\n        DocumentComponent,\n        LinkObjComponent,\n        MovingImageComponent,\n        ObjectComponent,\n        RegionComponent,\n        StillImageComponent,\n        TextComponent,\n        TextValueAsHtmlComponent,\n        TextValueAsStringComponent,\n        TextValueAsXmlComponent,\n        TextfileValueComponent,\n        DateValueComponent,\n        IntegerValueComponent,\n        ColorValueComponent,\n        DecimalValueComponent,\n        UriValueComponent,\n        BooleanValueComponent,\n        GeometryValueComponent,\n        GeonameValueComponent,\n        IntervalValueComponent,\n        ListValueComponent,\n        LinkValueComponent,\n        ExternalResValueComponent,\n        ListViewComponent,\n        GridViewComponent,\n        TableViewComponent,\n        ResourceViewComponent,\n        CompareViewComponent,\n        GraphViewComponent,\n        PropertiesViewComponent\n    ]\n})\nexport class KuiViewerModule {\n}\n"]}