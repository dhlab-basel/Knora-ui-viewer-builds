{"version":3,"file":"knora-viewer.js.map","sources":["ng://@knora/viewer/lib/resource/annotation/annotation.component.ts","ng://@knora/viewer/lib/resource/audio/audio.component.ts","ng://@knora/viewer/lib/resource/collection/collection.component.ts","ng://@knora/viewer/lib/resource/ddd/ddd.component.ts","ng://@knora/viewer/lib/resource/document/document.component.ts","ng://@knora/viewer/lib/resource/link-obj/link-obj.component.ts","ng://@knora/viewer/lib/resource/moving-image/moving-image.component.ts","ng://@knora/viewer/lib/resource/object/object.component.ts","ng://@knora/viewer/lib/resource/region/region.component.ts","ng://@knora/viewer/lib/resource/still-image/still-image.component.ts","ng://@knora/viewer/lib/resource/text/text.component.ts","ng://@knora/viewer/lib/property/boolean-value/boolean-value.component.ts","ng://@knora/viewer/lib/property/color-value/color-value.component.ts","ng://@knora/viewer/lib/property/date-value/date-value.component.ts","ng://@knora/viewer/lib/property/decimal-value/decimal-value.component.ts","ng://@knora/viewer/lib/property/external-res-value/external-res-value.component.ts","ng://@knora/viewer/lib/property/geometry-value/geometry-value.component.ts","ng://@knora/viewer/lib/property/geoname-value/geoname-value.component.ts","ng://@knora/viewer/lib/property/integer-value/integer-value.component.ts","ng://@knora/viewer/lib/property/interval-value/interval-value.component.ts","ng://@knora/viewer/lib/property/link-value/link-value.component.ts","ng://@knora/viewer/lib/property/list-value/list-value.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-html/text-value-as-html.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-string/text-value-as-string.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-xml/text-value-as-xml.component.ts","ng://@knora/viewer/lib/property/textfile-value/textfile-value.component.ts","ng://@knora/viewer/lib/property/uri-value/uri-value.component.ts","ng://@knora/viewer/lib/view/compare-view/compare-view.component.ts","ng://@knora/viewer/lib/view/graph-view/graph-view.component.ts","ng://@knora/viewer/lib/view/grid-view/grid-view.component.ts","ng://@knora/viewer/lib/view/list-view/list-view.component.ts","ng://@knora/viewer/lib/view/properties-view/properties-view.component.ts","ng://@knora/viewer/lib/view/resource-view/resource-view.component.ts","ng://@knora/viewer/lib/view/table-view/table-view.component.ts","ng://@knora/viewer/lib/view/kui-view.ts","ng://@knora/viewer/lib/view/search-results/search-results.component.ts","ng://@knora/viewer/lib/viewer.module.ts","ng://@knora/viewer/public_api.ts","ng://@knora/viewer/knora-viewer.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-annotation',\n  template: `<p>\n  annotation works!\n</p>\n`,\n  styles: [``]\n})\nexport class AnnotationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-audio',\n  template: `<p>\n  audio works!\n</p>\n`,\n  styles: [``]\n})\nexport class AudioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-collection',\n  template: `<p>\n  collection works!\n</p>\n`,\n  styles: [``]\n})\nexport class CollectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-ddd',\n  template: `<p>\n  ddd works!\n</p>\n`,\n  styles: [``]\n})\nexport class DddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-document',\n  template: `<p>\n  document works!\n</p>\n`,\n  styles: [``]\n})\nexport class DocumentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-link-obj',\n  template: `<p>\n  link-obj works!\n</p>\n`,\n  styles: [``]\n})\nexport class LinkObjComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-moving-image',\n  template: `<p>\n  moving-image works!\n</p>\n`,\n  styles: [``]\n})\nexport class MovingImageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-object',\n  template: `<p>\n  object works!\n</p>`,\n  styles: [``]\n})\nexport class ObjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-region',\n  template: `<p>\n  region works!\n</p>\n`,\n  styles: [``]\n})\nexport class RegionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChange\n} from '@angular/core';\nimport {\n    KnoraConstants,\n    Point2D,\n    ReadGeomValue,\n    ReadResource,\n    ReadStillImageFileValue,\n    RegionGeometry\n} from '@knora/core';\n\n\n// This component needs the openseadragon library itself, as well as the openseadragon plugin openseadragon-svg-overlay\n// Both libraries are installed via package.json, and loaded globally via the script tag in .angular-cli.json\n\n// OpenSeadragon does not export itself as ES6/ECMA2015 module,\n// it is loaded globally in scripts tag of angular-cli.json,\n// we still need to declare the namespace to make TypeScript compiler happy.\ndeclare let OpenSeadragon: any;\n\n/**\n * Represents a region.\n * Contains a reference to the resource representing the region and its geometries.\n */\nexport class ImageRegion {\n\n    /**\n     *\n     * @param regionResource a resource of type Region\n     */\n    constructor(readonly regionResource: ReadResource) {\n\n    }\n\n    /**\n     * Get all geometry information belonging to this region.\n     *\n     * @returns\n     */\n    getGeometries() {\n        return this.regionResource.properties[KnoraConstants.hasGeometry] as ReadGeomValue[];\n    }\n}\n\n/**\n * Represents an image including its regions.\n */\nexport class StillImageRepresentation {\n\n    /**\n     *\n     * @param stillImageFileValue a [[ReadStillImageFileValue]] representing an image.\n     * @param regions the regions belonging to the image.\n     */\n    constructor(readonly stillImageFileValue: ReadStillImageFileValue, readonly regions: ImageRegion[]) {\n\n    }\n\n}\n\n/**\n * Represents a geometry belonging to a specific region.\n */\nexport class GeometryForRegion {\n\n    /**\n     *\n     * @param geometry the geometrical information.\n     * @param region the region the geometry belongs to.\n     */\n    constructor(readonly geometry: RegionGeometry, readonly region: ReadResource) {\n    }\n\n}\n\n/**\n * Collection of `SVGPolygonElement` for individual regions.\n */\ninterface PolygonsForRegion {\n\n    [key: string]: SVGPolygonElement[];\n\n}\n\n/**\n * This component creates a OpenSeadragon viewer instance.\n * Accepts an array of ReadResource containing (among other resources) ReadStillImageFileValues to be rendered.\n * @member resources - resources containing (among other resources) the StillImageFileValues and incoming regions to be rendered. (Use as angular @Input data binding property.)\n */\n@Component({\n    selector: 'kui-still-image',\n    template: `<div class=\"still-image-viewer\">\n    <div class=\"navigation left\">\n        <button mat-button class=\"full-size\" id=\"KUI_OSD_PREV_PAGE\">\n            <mat-icon>keyboard_arrow_left</mat-icon>\n        </button>\n    </div>\n\n    <!-- main content with navigation and osd viewer -->\n    <div class=\"content\">\n\n        <!-- header with image tools -->\n        <mat-toolbar class=\"header\">\n            <mat-toolbar-row>\n                <!-- home button -->\n                <span>\n                <button mat-icon-button id=\"KUI_OSD_HOME\"><mat-icon>home</mat-icon></button>\n            </span>\n                <!-- zoom buttons -->\n                <span class=\"fill-remaining-space\"></span>\n                <span>\n                <button mat-icon-button id=\"KUI_OSD_ZOOM_IN\"><mat-icon>add</mat-icon></button>\n                <button mat-icon-button id=\"KUI_OSD_ZOOM_OUT\"><mat-icon>remove</mat-icon></button>\n            </span>\n                <!-- window button -->\n                <span class=\"fill-remaining-space\"></span>\n                <span>\n                <button mat-icon-button id=\"KUI_OSD_FULL_PAGE\"><mat-icon>fullscreen</mat-icon></button>\n            </span>\n            </mat-toolbar-row>\n        </mat-toolbar>\n\n        <!-- openseadragon (osd) viewer -->\n        <div class=\"osd-container\"></div>\n        <!-- /openseadragon (osd) -->\n        <!-- footer for copyright info; download button etc. -->\n        <div class=\"footer\">\n            <p class=\"mat-caption\" [innerHtml]=\"imageCaption\"></p>\n        </div>\n\n    </div>\n\n    <div class=\"navigation right\">\n        <button mat-button class=\"full-size\" id=\"KUI_OSD_NEXT_PAGE\">\n            <mat-icon>keyboard_arrow_right</mat-icon>\n        </button>\n    </div>\n\n</div>\n\n<!-- simple image viewer e.g. as a preview -->\n<!-- TODO: handle images array -->\n<!--<img *ngIf=\"simple && images?.length === 1; else osdViewer\" [src]=\"simpleImageExample\">-->\n\n\n<!--\n    <div>\n        <span *ngIf=\"images.length > 1\" (click)=\"gotoLeft()\">&lt;&lt;</span>\n        <span *ngIf=\"images.length > 1\" (click)=\"gotoRight()\">&gt;&gt;</span>\n    </div>\n-->\n\n\n\n`,\n    styles: [`.still-image-viewer{display:inline-flex;height:400px;max-width:800px;width:100%}@media (max-height:636px){.still-image-viewer{height:300px}}.still-image-viewer .navigation{height:calc(400px + 64px + 24px);width:36px}.still-image-viewer .navigation .mat-button.full-size{height:100%!important;width:36px!important;padding:0!important;min-width:36px!important}.still-image-viewer .content{height:calc(400px + 64px + 24px);max-width:calc(800px - (2 * 36px));width:calc(100% - (2 * 36px))}.still-image-viewer .content .osd-container{color:#ccc;background-color:#000;height:400px}.still-image-viewer .content .osd-container.fullscreen{max-width:100vw}.still-image-viewer .content .footer p{color:#ccc;background-color:#000;height:24px;margin:0;padding:0 16px}/deep/ .roi-svgoverlay{opacity:.4;fill:transparent;stroke:#00695c;stroke-width:2px;vector-effect:non-scaling-stroke}.roi-svgoverlay:focus,/deep/ .roi-svgoverlay:hover{opacity:1}/deep/ .roi-svgoverlay.active{opacity:1}`]\n})\nexport class StillImageComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input() images: StillImageRepresentation[];\n    @Input() imageCaption?: string;\n    @Input() activateRegion: string; // highlight a region\n\n    @Output() regionHovered = new EventEmitter<string>();\n\n    private viewer;\n    private regions: PolygonsForRegion = {};\n\n    /**\n     * Calculates the surface of a rectangular region.\n     *\n     * @param geom the region's geometry.\n     * @returns the surface.\n     */\n    private static surfaceOfRectangularRegion(geom: RegionGeometry): number {\n\n        if (geom.type !== 'rectangle') {\n            console.log('expected rectangular region, but ' + geom.type + ' given');\n            return 0;\n        }\n\n        const w = Math.max(geom.points[0].x, geom.points[1].x) - Math.min(geom.points[0].x, geom.points[1].x);\n        const h = Math.max(geom.points[0].y, geom.points[1].y) - Math.min(geom.points[0].y, geom.points[1].y);\n\n        return w * h;\n\n    }\n\n    /**\n     * Prepare tile sources from the given sequence of [[ReadStillImageFileValue]].\n     *\n     * @param imagesToDisplay the given file values to de displayed.\n     * @returns the tile sources to be passed to OSD viewer.\n     */\n    private static prepareTileSourcesFromFileValues(imagesToDisplay: ReadStillImageFileValue[]): Object[] {\n        let imageXOffset = 0;\n        let imageYOffset = 0;\n        const tileSources = [];\n\n        for (const image of imagesToDisplay) {\n            const sipiBasePath = image.imageServerIIIFBaseURL + '/' + image.imageFilename;\n            const width = image.dimX;\n            const height = image.dimY;\n\n            // construct OpenSeadragon tileSources according to https://openseadragon.github.io/docs/OpenSeadragon.Viewer.html#open\n            tileSources.push({\n                // construct IIIF tileSource configuration according to\n                // http://iiif.io/api/image/2.1/#technical-properties\n                // see also http://iiif.io/api/image/2.0/#a-implementation-notes\n                'tileSource': {\n                    '@context': 'http://iiif.io/api/image/2/context.json',\n                    '@id': sipiBasePath,\n                    'height': height,\n                    'width': width,\n                    'profile': ['http://iiif.io/api/image/2/level2.json'],\n                    'protocol': 'http://iiif.io/api/image',\n                    'tiles': [{\n                        'scaleFactors': [1, 2, 4, 8, 16, 32],\n                        'width': 1024\n                    }]\n                },\n                'x': imageXOffset,\n                'y': imageYOffset\n            });\n\n            imageXOffset++;\n        }\n\n        return tileSources;\n    }\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n    ngOnChanges(changes: { [key: string]: SimpleChange }) {\n        if (changes['images'] && changes['images'].isFirstChange()) {\n            this.setupViewer();\n        }\n        if (changes['images']) {\n            this.openImages();\n            this.renderRegions();\n\n            this.unhighlightAllRegions();\n            if (this.activateRegion !== undefined) {\n                this.highlightRegion(this.activateRegion);\n            }\n        } else if (changes['activateRegion']) {\n            this.unhighlightAllRegions();\n            if (this.activateRegion !== undefined) {\n                this.highlightRegion(this.activateRegion);\n            }\n        }\n    }\n\n    ngOnInit() {\n        // initialisation is done on first run of ngOnChanges\n    }\n\n    ngOnDestroy() {\n        if (this.viewer) {\n            this.viewer.destroy();\n            this.viewer = undefined;\n        }\n    }\n\n    /**\n     * Renders all ReadStillImageFileValues to be found in [[this.images]].\n     * (Although this.images is a Angular Input property, the built-in change detection of Angular does not detect changes in complex objects or arrays, only reassignment of objects/arrays.\n     * Use this method if additional ReadStillImageFileValues were added to this.images after creation/assignment of the this.images array.)\n     */\n    updateImages() {\n        if (!this.viewer) {\n            this.setupViewer();\n        }\n        this.openImages();\n    }\n\n    /**\n     * Renders all regions to be found in [[this.images]].\n     * (Although this.images is a Angular Input property, the built-in change detection of Angular does not detect changes in complex objects or arrays, only reassignment of objects/arrays.\n     * Use this method if additional regions were added to the resources.images)\n     */\n    updateRegions() {\n        if (!this.viewer) {\n            this.setupViewer();\n        }\n        this.renderRegions();\n    }\n\n    /**\n     * Highlights the polygon elements associated with the given region.\n     *\n     * @param regionIri the Iri of the region whose polygon elements should be highlighted..\n     */\n    private highlightRegion(regionIri) {\n\n        const activeRegion: SVGPolygonElement[] = this.regions[regionIri];\n\n        if (activeRegion !== undefined) {\n            for (const pol of activeRegion) {\n                pol.setAttribute('class', 'roi-svgoverlay active');\n            }\n        }\n    }\n\n    /**\n     * Unhighlights the polygon elements of all regions.\n     *\n     */\n    private unhighlightAllRegions() {\n\n        for (const reg in this.regions) {\n            if (this.regions.hasOwnProperty(reg)) {\n                for (const pol of this.regions[reg]) {\n                    pol.setAttribute('class', 'roi-svgoverlay');\n                }\n            }\n        }\n    }\n\n    /**\n     * Initializes the OpenSeadragon viewer\n     */\n    private setupViewer(): void {\n        const viewerContainer = this.elementRef.nativeElement.getElementsByClassName('osd-container')[0];\n        const osdOptions = {\n            element: viewerContainer,\n            sequenceMode: true,\n            showReferenceStrip: true,\n            showNavigator: true,\n            zoomInButton: 'KUI_OSD_ZOOM_IN',\n            zoomOutButton: 'KUI_OSD_ZOOM_OUT',\n            previousButton: 'KUI_OSD_PREV_PAGE',\n            nextButton: 'KUI_OSD_NEXT_PAGE',\n            homeButton: 'KUI_OSD_HOME',\n            fullPageButton: 'KUI_OSD_FULL_PAGE',\n            rotateLeftButton: 'KUI_OSD_ROTATE_LEFT',        // doesn't work yet\n            rotateRightButton: 'KUI_OSD_ROTATE_RIGHT'       // doesn't work yet\n\n        };\n        this.viewer = new OpenSeadragon.Viewer(osdOptions);\n        this.viewer.addHandler('full-screen', function (args) {\n            if (args.fullScreen) {\n                viewerContainer.classList.add('fullscreen');\n            } else {\n                viewerContainer.classList.remove('fullscreen');\n            }\n        });\n        this.viewer.addHandler('resize', function (args) {\n            args.eventSource.svgOverlay().resize();\n        });\n\n    }\n\n    /**\n     * Adds all images in this.images to the viewer.\n     * Images are positioned in a horizontal row next to each other.\n     */\n    private openImages(): void {\n        // imageXOffset controls the x coordinate of the left side of each image in the OpenSeadragon viewport coordinate system.\n        // The first image has its left side at x = 0, and all images are scaled to have a width of 1 in viewport coordinates.\n        // see also: https://openseadragon.github.io/examples/viewport-coordinates/\n\n        const fileValues: ReadStillImageFileValue[] = this.images.map(\n            (img) => {\n                return img.stillImageFileValue;\n            });\n\n        // display only the defined range of this.images\n        const tileSources: Object[] = StillImageComponent.prepareTileSourcesFromFileValues(fileValues);\n\n        this.viewer.clearOverlays();\n        this.viewer.open(tileSources);\n    }\n\n    /**\n     * Adds a ROI-overlay to the viewer for every region of every image in this.images\n     */\n    private renderRegions(): void {\n        this.viewer.clearOverlays();\n        this.regions = {};\n\n        let imageXOffset = 0; // see documentation in this.openImages() for the usage of imageXOffset\n\n        for (const image of this.images) {\n            const aspectRatio = (image.stillImageFileValue.dimY / image.stillImageFileValue.dimX);\n\n            // collect all geometries belonging to this page\n            const geometries: GeometryForRegion[] = [];\n            image.regions.map((reg) => {\n\n                this.regions[reg.regionResource.id] = [];\n                const geoms = reg.getGeometries();\n\n                geoms.map((geom) => {\n                    const geomForReg = new GeometryForRegion(geom.geometry, reg.regionResource);\n\n                    geometries.push(geomForReg);\n                });\n            });\n\n            // sort all geometries belonging to this page\n            geometries.sort((geom1, geom2) => {\n\n                if (geom1.geometry.type === 'rectangle' && geom2.geometry.type === 'rectangle') {\n\n                    const surf1 = StillImageComponent.surfaceOfRectangularRegion(geom1.geometry);\n                    const surf2 = StillImageComponent.surfaceOfRectangularRegion(geom2.geometry);\n\n                    // if reg1 is smaller than reg2, return 1\n                    // reg1 then comes after reg2 and thus is rendered later\n                    if (surf1 < surf2) {\n                        return 1;\n                    } else {\n                        return -1;\n                    }\n\n                } else {\n                    return 0;\n                }\n\n\n            });\n\n            // render all geometries for this page\n            for (const geom of geometries) {\n\n                const geometry = geom.geometry;\n                this.createSVGOverlay(geom.region.id, geometry, aspectRatio, imageXOffset, geom.region.label);\n\n            }\n\n            imageXOffset++;\n        }\n\n    }\n\n    /**\n     * Creates and adds a ROI-overlay to the viewer\n     * @param regionIri the Iri of the region.\n     * @param geometry - the geometry describing the ROI\n     * @param aspectRatio -  the aspectRatio (h/w) of the image on which the geometry should be placed\n     * @param xOffset -  the x-offset in Openseadragon viewport coordinates of the image on which the geometry should be placed\n     * @param toolTip -  the tooltip which should be displayed on mousehover of the svg element\n     */\n    private createSVGOverlay(regionIri: string, geometry: RegionGeometry, aspectRatio: number, xOffset: number, toolTip: string): void {\n        const lineColor = geometry.lineColor;\n        const lineWidth = geometry.lineWidth;\n\n        let svgElement;\n        switch (geometry.type) {\n            case 'rectangle':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');  // yes, we render rectangles as svg polygon elements\n                this.addSVGAttributesRectangle(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            case 'polygon':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n                this.addSVGAttributesPolygon(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            case 'circle':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n                this.addSVGAttributesCircle(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            default:\n                console.log('ERROR: StillImageOSDViewerComponent.createSVGOverlay: unknown geometryType: ' + geometry.type);\n                return;\n        }\n        svgElement.id = 'roi-svgoverlay-' + Math.random() * 10000;\n        svgElement.setAttribute('class', 'roi-svgoverlay');\n        svgElement.setAttribute('style', 'stroke: ' + lineColor + '; stroke-width: ' + lineWidth + 'px;');\n\n        // event when a region is clicked (output)\n        svgElement.addEventListener('click', () => {\n            this.regionHovered.emit(regionIri);\n        }, false);\n\n        const svgTitle = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n        svgTitle.textContent = toolTip;\n\n        const svgGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        svgGroup.appendChild(svgTitle);\n        svgGroup.appendChild(svgElement);\n\n        const overlay = this.viewer.svgOverlay();\n        overlay.node().appendChild(svgGroup);\n\n        this.regions[regionIri].push(svgElement);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'rectangle' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'polygon' (sic))\n     * @param geometry - the geometry describing the rectangle\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesRectangle(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const pointA = geometry.points[0];\n        const pointB = geometry.points[1];\n\n        // geometry.points contains two diagonally opposed corners of the rectangle, but the order of the corners is arbitrary.\n        // We therefore construct the upperleft (UL), lowerright (LR), upperright (UR) and lowerleft (LL) positions of the corners with min and max operations.\n        const positionUL = new Point2D(Math.min(pointA.x, pointB.x), Math.min(pointA.y, pointB.y));\n        const positionLR = new Point2D(Math.max(pointA.x, pointB.x), Math.max(pointA.y, pointB.y));\n        const positionUR = new Point2D(Math.max(pointA.x, pointB.x), Math.min(pointA.y, pointB.y));\n        const positionLL = new Point2D(Math.min(pointA.x, pointB.x), Math.max(pointA.y, pointB.y));\n\n        const points = [positionUL, positionUR, positionLR, positionLL];\n        const viewCoordPoints = this.image2ViewPortCoords(points, aspectRatio, xOffset);\n        const pointsString = this.createSVGPolygonPointsAttribute(viewCoordPoints);\n        svgElement.setAttribute('points', pointsString);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'polygon' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'polygon')\n     * @param geometry - the geometry describing the polygon\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesPolygon(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const viewCoordPoints = this.image2ViewPortCoords(geometry.points, aspectRatio, xOffset);\n        const pointsString = this.createSVGPolygonPointsAttribute(viewCoordPoints);\n        svgElement.setAttribute('points', pointsString);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'circle' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'circle')\n     * @param geometry - the geometry describing the circle\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesCircle(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const viewCoordPoints = this.image2ViewPortCoords(geometry.points, aspectRatio, xOffset);\n        const cx = String(viewCoordPoints[0].x);\n        const cy = String(viewCoordPoints[0].y);\n        // geometry.radius contains not the radius itself, but the coordinates of a (arbitrary) point on the circle.\n        // We therefore have to calculate the length of the vector geometry.radius to get the actual radius. -> sqrt(x^2 + y^2)\n        // Since geometry.radius has its y coordinate scaled to the height of the image,\n        // we need to multiply it with the aspectRatio to get to the scale used by Openseadragon, analoguous to this.image2ViewPortCoords()\n        const radius = String(Math.sqrt(geometry.radius.x * geometry.radius.x + aspectRatio * aspectRatio * geometry.radius.y * geometry.radius.y));\n        svgElement.setAttribute('cx', cx);\n        svgElement.setAttribute('cy', cy);\n        svgElement.setAttribute('r', radius);\n    }\n\n    /**\n     * Maps a Point2D[] with coordinates relative to an image to a new Point2D[] with coordinates in the viewport coordinate system of Openseadragon\n     * see also: https://openseadragon.github.io/examples/viewport-coordinates/\n     * @param points - an array of points in coordinate system relative to an image\n     * @param aspectRatio - the aspectRatio (h/w) of the image\n     * @param xOffset - the x-offset in viewport coordinates of the image\n     * @returns - a new Point2D[] with coordinates in the viewport coordinate system of Openseadragon\n     */\n    private image2ViewPortCoords(points: Point2D[], aspectRatio: number, xOffset: number): Point2D[] {\n        return points.map((point) => {\n            return new Point2D(point.x + xOffset, point.y * aspectRatio);\n        });\n    }\n\n    /**\n     * Returns a string in the format expected by the 'points' attribute of a SVGElement\n     * @param points - an array of points to be serialized to a string\n     * @returns - the points serialized to a string in the format expected by the 'points' attribute of a SVGElement\n     */\n    private createSVGPolygonPointsAttribute(points: Point2D[]): string {\n        let pointsString = '';\n        for (const i in points) {\n            if (points.hasOwnProperty(i)) {\n                pointsString += points[i].x;\n                pointsString += ',';\n                pointsString += points[i].y;\n                pointsString += ' ';\n            }\n        }\n        return pointsString;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-text',\n  template: `<p>\n  text works!\n</p>\n`,\n  styles: [``]\n})\nexport class TextComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadBooleanValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-boolean-value',\n  template: `<mat-checkbox [checked]=\"valueObject.bool\" disabled=\"true\"></mat-checkbox>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class BooleanValueComponent {\n\n  @Input()\n  set valueObject(value: ReadBooleanValue) {\n      this._booleanValueObj = value;\n  }\n\n  get valueObject() {\n      return this._booleanValueObj;\n  }\n\n  private _booleanValueObj: ReadBooleanValue;\n\n  constructor() { }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadColorValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-color-value',\n    template: `<span [style.background-color]=\"valueObject.colorHex\">{{valueObject.colorHex}}</span>`,\n    styles: [`.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}.mat-form-field{width:36px;overflow-x:visible}`]\n})\nexport class ColorValueComponent {\n\n    @Input()\n    set valueObject(value: ReadColorValue) {\n        this._colorValueObj = value;\n    }\n\n    get valueObject() {\n        return this._colorValueObj;\n    }\n\n    private _colorValueObj: ReadColorValue;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { DateRangeSalsah, DateSalsah, Precision, ReadDateValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-date-value',\n  template: `<span *ngIf=\"period; else preciseDate\">\n    {{dates[0].date | date: dates[0].format}}\n    <span *ngIf=\"era\">\n        {{dates[0].era}}\n    </span>\n    - {{dates[1].date | date: dates[1].format}}\n    <span *ngIf=\"era\">\n        {{dates[1].era}}\n    </span>\n\n    <span *ngIf=\"calendar\">\n        ({{dates[0].calendar}})\n    </span>\n</span>\n\n<ng-template #preciseDate>\n\n    <span>\n        {{dates[0].date | date: dates[0].format }}\n        <span *ngIf=\"era\">\n            {{dates[0].era}}\n        </span>\n        <span *ngIf=\"calendar\">\n            ({{dates[0].calendar}})\n        </span>\n    </span>\n\n</ng-template>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class DateValueComponent {\n\n  @Input()\n  set calendar(value: boolean) {\n    this._calendar = value;\n  }\n\n  get calendar() {\n    return this._calendar;\n  }\n\n  @Input()\n  set era(value: boolean) {\n    this._era = value;\n  }\n\n  get era() {\n    return this._era;\n  }\n\n  @Input()\n  set valueObject(value: ReadDateValue) {\n    this._dateValueObj = value;\n\n    const dateOrRange: DateSalsah | DateRangeSalsah = this.valueObject.getDateSalsah();\n    if (dateOrRange instanceof DateRangeSalsah) {\n      // period (start and end dates)\n      this.period = true;\n      this.dates = [this.getJSDate(dateOrRange.start), this.getJSDate(dateOrRange.end)];\n    } else {\n      // single date\n      this.period = false;\n      this.dates = [this.getJSDate(dateOrRange)];\n    }\n\n  }\n\n  get valueObject() {\n    return this._dateValueObj;\n  }\n\n  dates: DateFormatter[];\n  period: boolean;\n  private _calendar: boolean;\n  private _era: boolean;\n  private _dateValueObj: ReadDateValue;\n\n  constructor() { }\n\n  /**\n   * Converts a `DateSalsah` to a JS Date, providing necessary formatting information.\n   * JULIAN and GREGORIAN calendar are the only available for the moment.\n   *\n   * @param date the date to be converted.\n   * @return DateFormatter.\n   */\n  getJSDate(date: DateSalsah): DateFormatter {\n\n    if (date.precision === Precision.yearPrecision) {\n      return {\n        format: 'yyyy',\n        date: new Date(date.year.toString()),\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else if (date.precision === Precision.monthPrecision) {\n      return {\n        format: 'MMMM ' + 'yyyy',\n        date: new Date(date.year, date.month - 1, 1), // 0 base month\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else if (date.precision === Precision.dayPrecision) {\n      return {\n        format: 'longDate',\n        date: new Date(date.year, date.month - 1, date.day),  // 0 base month\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else {\n      console.error('Error: incorrect precision for date');\n    }\n\n  }\n\n}\n\n/**\n * Date structure for the template\n */\nexport interface DateFormatter {\n  format: string;\n  date: Date;\n  era: string;\n  calendar: string;\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadDecimalValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-decimal-value',\n  template: `<span>{{valueObject.decimal}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class DecimalValueComponent {\n\n  @Input()\n  set valueObject(value: ReadDecimalValue) {\n    this._decimalValueObj = value;\n  }\n\n  get valueObject() {\n    return this._decimalValueObj;\n  }\n\n  private _decimalValueObj: ReadDecimalValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-external-res-value',\n  template: `<p>\n  external-res-value works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class ExternalResValueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadGeomValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-geometry-value',\n  template: `<span>{{valueObject.geometryString}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class GeometryValueComponent {\n\n  @Input()\n  set valueObject(value: ReadGeomValue) {\n    this._geomValueObj = value;\n  }\n\n  get valueObject() {\n    return this._geomValueObj;\n  }\n\n  private _geomValueObj: ReadGeomValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-geoname-value',\n  template: `<p>\n  geoname-value works!\n</p>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class GeonameValueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadIntegerValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-integer-value',\n    template: `<span>{{valueObject.integer}}</span>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class IntegerValueComponent {\n\n    @Input()\n    set valueObject(value: ReadIntegerValue) {\n        this._integerValueObj = value;\n    }\n\n    get valueObject() {\n        return this._integerValueObj;\n    }\n\n    private _integerValueObj: ReadIntegerValue;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadIntervalValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-interval-value',\n  template: `<span>{{valueObject.intervalStart}} - {{valueObject.intervalEnd}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class IntervalValueComponent {\n\n  @Input()\n  set valueObject(value: ReadIntervalValue) {\n    this._intervalValueObj = value;\n  }\n\n  get valueObject() {\n    return this._intervalValueObj;\n  }\n\n  private _intervalValueObj: ReadIntervalValue;\n\n  constructor() { }\n\n}\n","import { Component, Inject, Input, Output, EventEmitter } from '@angular/core';\nimport { OntologyInformation, ReadLinkValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-link-value',\n    template: `<a class=\"salsah-link\" (click)=\"refResClicked()\">{{referredResource}}</a>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class LinkValueComponent {\n\n    @Input()\n    set ontologyInfo(value: OntologyInformation) {\n        this._ontoInfo = value;\n    }\n\n    get ontologyInfo() {\n        return this._ontoInfo;\n    }\n\n    @Input()\n    set valueObject(value: ReadLinkValue) {\n        this._linkValueObj = value;\n\n        if (this.valueObject.referredResource !== undefined) {\n            this.referredResource = this.valueObject.referredResource.label;\n        } else {\n            this.referredResource = this.valueObject.referredResourceIri;\n        }\n    }\n\n    get valueObject() {\n        return this._linkValueObj;\n    }\n\n    @Output()\n    referredResourceClicked: EventEmitter<ReadLinkValue> = new EventEmitter();\n\n    private _linkValueObj: ReadLinkValue;\n    private _ontoInfo: OntologyInformation;\n    referredResource: string;\n\n    constructor() { }\n\n    refResClicked() {\n        this.referredResourceClicked.emit(this._linkValueObj);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadListValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-list-value',\n  template: `<span>{{valueObject.listNodeLabel}}</span>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class ListValueComponent {\n\n  @Input()\n  set valueObject(value: ReadListValue) {\n    this._listValueObj = value;\n  }\n\n  get valueObject() {\n    return this._listValueObj;\n  }\n\n  private _listValueObj: ReadListValue;\n\n  constructor() { }\n\n}\n","import { Component, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { OntologyInformation, ReadTextValueAsHtml, KnoraConstants } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-html',\n    template: `<div>{{valueObject.html}}</div>`,\n    styles: [``]\n})\nexport class TextValueAsHtmlComponent {\n\n    @Output()\n    referredResourceClicked: EventEmitter<string> = new EventEmitter();\n\n    @Input()\n    set ontologyInfo(value: OntologyInformation) {\n        this._ontoInfo = value;\n    }\n\n    get ontologyInfo() {\n        return this._ontoInfo;\n    }\n\n    @Input()\n    set bindEvents(value: Boolean) {\n        this._bindEvents = value;\n    }\n\n    get bindEvents() {\n        return this._bindEvents;\n    }\n\n    @Input()\n    set valueObject(value: ReadTextValueAsHtml) {\n        this._htmlValueObj = value;\n\n        if (this.el.nativeElement.innerHTML) {\n            this.el.nativeElement.innerHTML = this.valueObject.html;\n        }\n    }\n\n    get valueObject() {\n        return this._htmlValueObj;\n    }\n\n    html: string;\n    private _htmlValueObj: ReadTextValueAsHtml;\n    private _ontoInfo: OntologyInformation;\n    private _bindEvents: Boolean;\n\n    constructor(private el: ElementRef) {\n    }\n\n    refResClicked(refResourceIri: string) {\n        this.referredResourceClicked.emit(refResourceIri);\n    }\n\n    /**\n     * Binds a click event to standoff links that shows the referred resource.\n     *\n     * @param targetElement\n     */\n    @HostListener('click', ['$event.target'])\n    onClick(targetElement) {\n        if (this._bindEvents && targetElement.nodeName.toLowerCase() === 'a'\n            && targetElement.className.toLowerCase().indexOf(KnoraConstants.SalsahLink) >= 0\n            && targetElement.href !== undefined) {\n            this.refResClicked(targetElement.href);\n            // prevent propagation\n            return false;\n        } else if (this.bindEvents && targetElement.nodeName.toLowerCase() === 'a' && targetElement.href !== undefined) {\n            // open link in a new window\n            window.open(targetElement.href, '_blank');\n            // prevent propagation\n            return false;\n        } else {\n            // prevent propagation\n            return false;\n        }\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextValueAsString } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-string',\n    template: `<span>{{valueObject.str}}</span>\n`,\n    styles: [``]\n})\nexport class TextValueAsStringComponent {\n\n    @Input()\n    set valueObject(value: ReadTextValueAsString) {\n        this._textStringValueObj = value;\n    }\n\n    get valueObject() {\n        return this._textStringValueObj;\n    }\n\n    private _textStringValueObj: ReadTextValueAsString;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextValueAsXml } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-xml',\n    template: `<span>{{valueObject.xml}}</span>`,\n    styles: [``]\n})\nexport class TextValueAsXmlComponent {\n\n    @Input()\n    set valueObject(value: ReadTextValueAsXml) {\n        this._xmlValueObj = value;\n    }\n\n    get valueObject() {\n        return this._xmlValueObj;\n    }\n\n    private _xmlValueObj: ReadTextValueAsXml;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextFileValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-textfile-value',\n  template: `<a target=\"_blank\" href=\"{{valueObject.textFileURL}}\">{{valueObject.textFilename}}</a>`,\n  styles: [``]\n})\nexport class TextfileValueComponent {\n\n  @Input()\n  set valueObject(value: ReadTextFileValue) {\n    this._textfileValueObj = value;\n  }\n\n  get valueObject() {\n    return this._textfileValueObj;\n  }\n\n  private _textfileValueObj: ReadTextFileValue;\n\n  constructor() { }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadUriValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-uri-value',\n  template: `<a href=\"{{valueObject.uri}}\" target=\"_blank\">{{valueObject.uri}}</a>`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class UriValueComponent {\n\n  @Input()\n  set valueObject(value: ReadUriValue) {\n    this.__uriValueObj = value;\n  }\n\n  get valueObject() {\n    return this.__uriValueObj;\n  }\n\n  private __uriValueObj: ReadUriValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-compare-view',\n  template: `<p>\n  compare-view works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class CompareViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-graph-view',\n  template: `<p>\n  graph-view works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class GraphViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-grid-view',\n  template: `<p>\n  grid-view works!\n</p>\n`,\n  styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class GridViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { KnoraConstants } from '@knora/core';\n\n@Component({\n    selector: 'kui-list-view',\n    template: `<div>\n    <kui-progress-indicator *ngIf=\"isLoading\" [color]=\"'#D88958'\"></kui-progress-indicator>\n\n    <mat-list class=\"list-view\" *ngFor=\"let res of result; let i = index; let last = last;\">\n        <mat-list-item class=\"link\">\n            <mat-icon matListIcon>image_search</mat-icon>\n            <h2 matLine class=\"lv-label\">{{ontologyInfo?.getLabelForResourceClass(res.type)}} - {{res.label}}</h2>\n\n            <div matLine *ngFor=\"let prop of res.properties | kuiKey\">\n                <div *ngFor=\"let val of prop.value | kuiKey\">\n                    <div [ngSwitch]=\"val.value.getClassName()\">\n\n                        <div matLine class=\"lv-html-text\" *ngSwitchCase=\"KnoraConstants.ReadTextValueAsHtml\">\n                            <kui-text-value-as-html [valueObject]=\"val.value\" [ontologyInfo]=\"ontologyInfo\" [bindEvents]=\"false\"></kui-text-value-as-html>\n                            <p class=\"lv-read-more\"></p>\n                        </div>\n\n                        <span matLine>\n                            <kui-date-value *ngSwitchCase=\"KnoraConstants.ReadDateValue\" [valueObject]=\"val.value\" [calendar]=\"true\" [era]=\"true\"></kui-date-value>\n                            <span *ngSwitchDefault=\"\">{{val.value.getContent()}}</span>\n                        </span>\n                        <br>\n                        <span matLine *ngIf=\"ontologyInfo?.getLabelForProperty(prop.key) !== 'Text'\">\n                            {{ontologyInfo?.getLabelForProperty(prop.key)}}\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n        </mat-list-item>\n\n        <mat-divider *ngIf=\"!last\"></mat-divider>\n\n    </mat-list>\n</div>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class ListViewComponent {\n\n    @Input() result;\n    @Input() ontologyInfo;\n    @Input() isLoading;\n\n    KnoraConstants = KnoraConstants;\n\n    constructor() { }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'kui-properties-view',\n    template: `<p>\n    properties-view works!\n</p>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class PropertiesViewComponent {\n\n    constructor() { }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n    ApiServiceError,\n    ApiServiceResult,\n    ConvertJSONLD,\n    IncomingService,\n    KnoraConstants,\n    OntologyCacheService,\n    OntologyInformation,\n    ReadResource,\n    ReadResourcesSequence,\n    ResourceService\n} from '@knora/core';\n\ndeclare let require: any;\nconst jsonld = require('jsonld');\n\n@Component({\n    selector: 'kui-resource-view',\n    template: `<mat-card>\n\n    <!-- TODO: switch through the media type -->\n    <kui-still-image></kui-still-image>\n    <kui-moving-image></kui-moving-image>\n    <kui-annotation></kui-annotation>\n    <kui-audio></kui-audio>\n    <kui-collection></kui-collection>\n    <kui-ddd></kui-ddd>\n    <kui-document></kui-document>\n    <kui-link-obj></kui-link-obj>\n    <kui-object></kui-object>\n    <kui-region></kui-region>\n    <kui-text></kui-text>\n\n    <h2>metadata for resource {{ resource?.label}} ({{ resource?.id }})</h2>\n    <h3>type: {{ontologyInfo?.getLabelForResourceClass(resource?.type)}}</h3>\n\n    <div *ngFor=\"let prop of resource?.properties | kuiKey\">\n        <mat-list>\n            <span>{{ontologyInfo?.getLabelForProperty(prop.key)}}</span>\n            <mat-list-item *ngFor=\"let val of prop.value\">\n                <span [ngSwitch]=\"val.getClassName()\">\n                    <kui-color-value *ngSwitchCase=\"KnoraConstants.ReadColorValue\" [valueObject]=\"val\"></kui-color-value>\n                    <kui-text-value-as-html *ngSwitchCase=\"KnoraConstants.ReadTextValueAsHtml\" [valueObject]=\"val\" [ontologyInfo]=\"ontologyInfo\" [bindEvents]=\"true\"></kui-text-value-as-html>\n                    <kui-text-value-as-string *ngSwitchCase=\"KnoraConstants.ReadTextValueAsString\" [valueObject]=\"val\"></kui-text-value-as-string>\n                    <kui-text-value-as-xml *ngSwitchCase=\"KnoraConstants.ReadTextValueAsXml\" [valueObject]=\"val\"></kui-text-value-as-xml>\n                    <kui-date-value *ngSwitchCase=\"KnoraConstants.ReadDateValue\" [valueObject]=\"val\"></kui-date-value>\n                    <kui-link-value *ngSwitchCase=\"KnoraConstants.ReadLinkValue\" [valueObject]=\"val\" [ontologyInfo]=\"ontologyInfo\"></kui-link-value>\n                    <kui-integer-value *ngSwitchCase=\"KnoraConstants.ReadIntegerValue\" [valueObject]=\"val\"></kui-integer-value>\n                    <kui-decimal-value *ngSwitchCase=\"KnoraConstants.ReadDecimalValue\" [valueObject]=\"val\"></kui-decimal-value>\n                    <kui-geometry-value *ngSwitchCase=\"KnoraConstants.ReadGeomValue\" [valueObject]=\"val\"></kui-geometry-value>\n                    <kui-uri-value *ngSwitchCase=\"KnoraConstants.ReadUriValue\" [valueObject]=\"val\"></kui-uri-value>\n                    <kui-boolean-value *ngSwitchCase=\"KnoraConstants.ReadBooleanValue\" [valueObject]=\"val\"></kui-boolean-value>\n                    <kui-interval-value *ngSwitchCase=\"KnoraConstants.ReadIntervalValue\" [valueObject]=\"val\"></kui-interval-value>\n                    <kui-list-value *ngSwitchCase=\"KnoraConstants.ReadListValue\" [valueObject]=\"val\"></kui-list-value>\n                    <kui-textfile-value *ngSwitchCase=\"KnoraConstants.TextFileValue\" [valueObject]=\"val\"></kui-textfile-value>\n                    <span *ngSwitchDefault=\"\">Not supported {{val.getClassName()}}</span>\n                </span>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n</mat-card>`,\n    styles: [`.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.mat-list .mat-list-item .mat-line{white-space:normal!important;max-width:95%}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-label{font-weight:700!important}`]\n})\nexport class ResourceViewComponent implements OnInit {\n\n    @Input() iri?: string = 'http://rdfh.ch/8be1b7cf7103';\n\n    ontologyInfo: OntologyInformation; // ontology information about resource classes and properties present in the requested resource with Iri `iri`\n    resource: ReadResource; // the resource to be displayed\n    errorMessage: any;\n\n    KnoraConstants = KnoraConstants;\n\n    constructor(private _route: ActivatedRoute,\n                private _resourceService: ResourceService,\n                private _cacheService: OntologyCacheService,\n                private _incomingService: IncomingService) {\n\n        const routeParams = this._route.snapshot.params;\n        this.iri = routeParams.id;\n\n    }\n\n    ngOnInit() {\n        this.getResource(this.iri);\n    }\n\n    private getResource(iri: string): void {\n        this._resourceService.getResource(iri)\n            .subscribe(\n                (result: ApiServiceResult) => {\n                    console.log('result: ', result.body);\n                    const promises = jsonld.promises;\n                    // compact JSON-LD using an empty context: expands all Iris\n                    const promise = promises.compact(result.body, {});\n\n                    promise.then((compacted) => {\n\n                        const resourceSeq: ReadResourcesSequence = ConvertJSONLD.createReadResourcesSequenceFromJsonLD(compacted);\n\n                        // make sure that exactly one resource is returned\n                        if (resourceSeq.resources.length === 1) {\n\n                            // get resource class Iris from response\n                            const resourceClassIris: string[] = ConvertJSONLD.getResourceClassesFromJsonLD(compacted);\n\n                            // request ontology information about resource class Iris (properties are implied)\n                            this._cacheService.getResourceClassDefinitions(resourceClassIris).subscribe(\n                                (resourceClassInfos: any) => {\n                                    // initialize ontology information\n                                    this.ontologyInfo = resourceClassInfos; // console.log('initialization of ontologyInfo: ', this.ontologyInfo); > object received\n\n                                    // prepare a possibly attached image file to be displayed\n                                    // this.collectImagesAndRegionsForResource(resourceSeq.resources[0]);\n\n                                    this.resource = resourceSeq.resources[0];\n                                    // console.log('resource: ', this.resource);\n\n                                    // this.requestIncomingResources();\n                                },\n                                (err) => {\n\n                                    console.log('cache request failed: ' + err);\n                                });\n                        } else {\n                            // exactly one resource was expected, but resourceSeq.resources.length != 1\n                            this.errorMessage = `Exactly one resource was expected, but ${resourceSeq.resources.length} resource(s) given.`;\n                        }\n                    }, function (err) {\n                        console.error('JSONLD of full resource request could not be expanded:' + err);\n                    });\n                    // this.isLoading = false;\n                },\n                (error: ApiServiceError) => {\n                    console.error(error);\n                    // this.errorMessage = <any>error;\n                    // this.isLoading = false;\n                });\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-table-view',\n  template: `<p>\n  table-view works!\n</p>\n`,\n  styles: [``]\n})\nexport class TableViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport {\n    CountQueryResult,\n    ExtendedSearchParams,\n    KnoraConstants,\n    OntologyCacheService,\n    OntologyInformation,\n    ReadResource,\n    ReadResourcesSequence,\n    SearchParamsService,\n    SearchService\n} from '@knora/core';\nimport { Subscription } from 'rxjs';\n\nexport abstract class KuiView implements OnInit, OnDestroy {\n\n    abstract offset: number;\n    abstract maxOffset: number;\n    abstract result: ReadResource[];\n    abstract ontologyInfo: OntologyInformation;\n    abstract navigationSubscription: Subscription;\n    abstract gravsearchGenerator: ExtendedSearchParams;\n    abstract searchQuery: string;\n    abstract searchMode: string;\n    abstract numberOfAllResults: number;\n    abstract KnoraConstants: KnoraConstants;\n    abstract rerender: boolean;\n    abstract isLoading: boolean;\n    abstract errorMessage: any;\n    abstract pagingLimit: number;\n\n    constructor(\n        protected _route: ActivatedRoute,\n        protected _searchService: SearchService,\n        protected _searchParamsService: SearchParamsService,\n        protected _router: Router) {\n    }\n\n    ngOnInit() {\n        this.navigationSubscription = this._route.paramMap.subscribe((params: Params) => {\n            this.searchMode = params.get('mode');\n\n            // init offset  and result\n            this.offset = 0;\n            this.result = [];\n\n            if (this.searchMode === 'fulltext') {\n                this.searchQuery = params.get('q');\n            } else if (this.searchMode === 'extended') {\n                this.gravsearchGenerator = this._searchParamsService.getSearchParams();\n                this.generateGravsearchQuery();\n            }\n\n            this.rerender = true;\n            this.getResult();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.navigationSubscription !== undefined) {\n            this.navigationSubscription.unsubscribe();\n        }\n    }\n\n    /**\n     * Generates the Gravsearch query for the current offset.\n     */\n    protected generateGravsearchQuery() {\n\n        const gravsearch: string | boolean = this.gravsearchGenerator.generateGravsearch(this.offset);\n        if (gravsearch === false) {\n            // no valid search params (application has been reloaded)\n            // go to root\n            this._router.navigate([''], { relativeTo: this._route });\n            return;\n        } else {\n            this.searchQuery = <string>gravsearch;\n        }\n    }\n\n    /**\n     * Get search result from Knora - 2 cases: simple search and extended search\n     */\n    protected getResult() {\n        this.isLoading = true;\n\n        // FULLTEXT SEARCH\n        if (this.searchMode === 'fulltext') {\n\n            if (this.offset === 0) {\n                // perform count query\n                this._searchService.doFullTextSearchCountQueryCountQueryResult(this.searchQuery)\n                    .subscribe(\n                        this.showNumberOfAllResults,\n                        (error: any) => {\n                            this.errorMessage = <any>error;\n                        }\n                    );\n            }\n\n            // perform full text search\n            this._searchService.doFullTextSearchReadResourceSequence(this.searchQuery, this.offset)\n                .subscribe(\n                    this.processSearchResults, // function pointer\n                    (error: any) => {\n                        this.errorMessage = <any>error;\n                    }\n                );\n\n            // EXTENDED SEARCH\n        } else if (this.searchMode === 'extended') {\n            // perform count query\n            if (this.offset === 0) {\n                this._searchService.doExtendedSearchCountQueryCountQueryResult(this.searchQuery)\n                    .subscribe(\n                        this.showNumberOfAllResults,\n                        (error: any) => {\n                            this.errorMessage = <any>error;\n                        }\n                    );\n            }\n            this._searchService.doExtendedSearchReadResourceSequence(this.searchQuery)\n                .subscribe(\n                    this.processSearchResults, // function pointer\n                    (error: any) => {\n                        this.errorMessage = <any>error;\n                    });\n\n        } else {\n            this.errorMessage = `search mode invalid: ${this.searchMode}`;\n        }\n    }\n\n    /**\n     *\n     * Converts search results from JSON-LD to a [[ReadResourcesSequence]] and requests information about ontology entities.\n     * This function is passed to `subscribe` as a pointer (instead of redundantly defining the same lambda function).\n     *\n     * @param {ReadResourcesSequence} searchResult the answer to a search request.\n     */\n    private processSearchResults = (searchResult: ReadResourcesSequence) => {\n\n        // assign ontology information to a variable so it can be used in the component's template\n        if (this.ontologyInfo === undefined) {\n            // init ontology information\n            this.ontologyInfo = searchResult.ontologyInformation;\n        } else {\n            // update ontology information\n            this.ontologyInfo.updateOntologyInformation(searchResult.ontologyInformation);\n        }\n        // append results to search results\n        this.result = this.result.concat(searchResult.resources);\n\n        this.isLoading = false;\n        this.rerender = false;\n\n    }\n\n    /**\n     * Shows total number of results returned by a count query.\n     *\n     * @param {ApiServiceResult} countQueryResult the response to a count query.\n     */\n    private showNumberOfAllResults = (countQueryResult: CountQueryResult) => {\n        this.numberOfAllResults = countQueryResult.numberOfResults;\n\n        if (this.numberOfAllResults > 0) {\n            // offset is 0-based\n            // if numberOfAllResults equals the pagingLimit, the max. offset is 0\n            this.maxOffset = Math.floor((this.numberOfAllResults - 1) / this.pagingLimit);\n        } else {\n            this.maxOffset = 0;\n        }\n    }\n\n    /**\n     * Loads the next page of results.\n     * The results will be appended to the existing ones.\n     *\n     * @param {number} offset\n     * @returns void\n     */\n    loadMore(offset: number): void {\n        // update the page offset when the end of scroll is reached to get the next page of search results\n        if (this.offset < this.maxOffset) {\n            this.offset++;\n        } else {\n            return;\n        }\n\n        if (this.searchMode === 'extended') {\n            this.generateGravsearchQuery();\n        }\n\n        this.getResult();\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { KuiView } from '../kui-view';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport {\n  ApiServiceError,\n  ExtendedSearchParams,\n  GravsearchGenerationService,\n  KnoraConstants,\n  OntologyCacheService,\n  OntologyInformation,\n  ReadResource,\n  ReadResourcesSequence,\n  SearchParamsService,\n  SearchService\n} from '@knora/core';\n\n@Component({\n  selector: 'kui-search-results',\n  template: `<div *ngIf=\"!rerender\">\n    <div *ngIf=\"numberOfAllResults !== 0 && result; else noResult\">\n        <h4>Number of results: {{numberOfAllResults}}</h4>\n        <mat-tab-group>\n            <mat-tab label=\"List\">\n                <kui-list-view [result]=\"result\" [ontologyInfo]=\"ontologyInfo\" [isLoading]=\"isLoading\"></kui-list-view>\n            </mat-tab>\n            <mat-tab label=\"Grid\">\n                <kui-grid-view></kui-grid-view>\n            </mat-tab>\n            <mat-tab label=\"Table\">\n                <kui-table-view></kui-table-view>\n            </mat-tab>\n            <mat-tab label=\"Gravsearch\">\n                <kui-graph-view></kui-graph-view>\n            </mat-tab>\n        </mat-tab-group>\n\n        <div class=\"load-panel\" *ngIf=\"result.length > 0\">\n            <button mat-flat-button color=\"primary\" class=\"link center\" (click)=\"loadMore(offset)\" *ngIf=\"offset < maxOffset\">Load more\n                <mat-icon>keyboard_arrow_down</mat-icon>\n            </button>\n        </div>\n\n    </div>\n\n    <!-- In case of 0 result -->\n    <ng-template #noResult>\n        <p>\n            <strong>No result</strong>\n        </p>\n    </ng-template>\n\n</div>\n\n<!-- Error message -->\n<div *ngIf=\"errorMessage\">\n    <p>There is an error: {{errorMessage}}</p>\n</div>`,\n  styles: [`.load-panel{width:100%}.load-panel .center{display:block;line-height:24px;margin:12px auto}`]\n})\nexport class SearchResultsComponent extends KuiView {\n\n  KnoraConstants = KnoraConstants;\n  offset: number = 0;\n  maxOffset: number = 0;\n  gravsearchGenerator: ExtendedSearchParams;\n  result: ReadResource[] = [];\n  ontologyInfo: OntologyInformation;\n  numberOfAllResults: number;\n  rerender: boolean = false;\n  searchQuery: string;\n  searchMode: string;\n  isLoading = true;\n  errorMessage: any = undefined;\n  navigationSubscription: Subscription;\n  pagingLimit: number = 25;\n\n  constructor(\n    protected _route: ActivatedRoute,\n    protected _searchService: SearchService,\n    protected _searchParamsService: SearchParamsService,\n    protected _router: Router\n  ) {\n    super(_route, _searchService, _searchParamsService, _router);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from '@angular/material';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { KuiActionModule } from '@knora/action';\nimport { KuiCoreModule } from '@knora/core';\n\nimport { BooleanValueComponent } from './property/boolean-value/boolean-value.component';\nimport { ColorValueComponent } from './property/color-value/color-value.component';\nimport { DateValueComponent } from './property/date-value/date-value.component';\nimport { DecimalValueComponent } from './property/decimal-value/decimal-value.component';\nimport { ExternalResValueComponent } from './property/external-res-value/external-res-value.component';\nimport { GeometryValueComponent } from './property/geometry-value/geometry-value.component';\nimport { GeonameValueComponent } from './property/geoname-value/geoname-value.component';\nimport { IntegerValueComponent } from './property/integer-value/integer-value.component';\nimport { IntervalValueComponent } from './property/interval-value/interval-value.component';\nimport { LinkValueComponent } from './property/link-value/link-value.component';\nimport { ListValueComponent } from './property/list-value/list-value.component';\nimport { TextValueAsHtmlComponent } from './property/text-value/text-value-as-html/text-value-as-html.component';\nimport { TextValueAsStringComponent } from './property/text-value/text-value-as-string/text-value-as-string.component';\nimport { TextValueAsXmlComponent } from './property/text-value/text-value-as-xml/text-value-as-xml.component';\nimport { TextfileValueComponent } from './property/textfile-value/textfile-value.component';\nimport { UriValueComponent } from './property/uri-value/uri-value.component';\nimport { AnnotationComponent } from './resource/annotation/annotation.component';\nimport { AudioComponent } from './resource/audio/audio.component';\nimport { CollectionComponent } from './resource/collection/collection.component';\nimport { DddComponent } from './resource/ddd/ddd.component';\nimport { DocumentComponent } from './resource/document/document.component';\nimport { LinkObjComponent } from './resource/link-obj/link-obj.component';\nimport { MovingImageComponent } from './resource/moving-image/moving-image.component';\nimport { ObjectComponent } from './resource/object/object.component';\nimport { RegionComponent } from './resource/region/region.component';\nimport { StillImageComponent } from './resource/still-image/still-image.component';\nimport { TextComponent } from './resource/text/text.component';\nimport { CompareViewComponent } from './view/compare-view/compare-view.component';\nimport { GraphViewComponent } from './view/graph-view/graph-view.component';\nimport { GridViewComponent } from './view/grid-view/grid-view.component';\nimport { ListViewComponent } from './view/list-view/list-view.component';\nimport { PropertiesViewComponent } from './view/properties-view/properties-view.component';\nimport { ResourceViewComponent } from './view/resource-view/resource-view.component';\nimport { TableViewComponent } from './view/table-view/table-view.component';\nimport { SearchResultsComponent } from './view/search-results/search-results.component';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        KuiCoreModule,\n        KuiActionModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatIconModule,\n        MatListModule,\n        MatNativeDateModule,\n        MatSlideToggleModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        AnnotationComponent,\n        AudioComponent,\n        CollectionComponent,\n        DddComponent,\n        DocumentComponent,\n        LinkObjComponent,\n        MovingImageComponent,\n        ObjectComponent,\n        RegionComponent,\n        StillImageComponent,\n        TextComponent,\n        TextValueAsHtmlComponent,\n        TextValueAsStringComponent,\n        TextValueAsXmlComponent,\n        TextfileValueComponent,\n        DateValueComponent,\n        IntegerValueComponent,\n        ColorValueComponent,\n        DecimalValueComponent,\n        UriValueComponent,\n        BooleanValueComponent,\n        GeometryValueComponent,\n        GeonameValueComponent,\n        IntervalValueComponent,\n        ListValueComponent,\n        LinkValueComponent,\n        ExternalResValueComponent,\n        ListViewComponent,\n        GridViewComponent,\n        TableViewComponent,\n        ResourceViewComponent,\n        CompareViewComponent,\n        GraphViewComponent,\n        PropertiesViewComponent,\n        SearchResultsComponent\n    ],\n    exports: [\n\n        AnnotationComponent,\n        AudioComponent,\n        CollectionComponent,\n        DddComponent,\n        DocumentComponent,\n        LinkObjComponent,\n        MovingImageComponent,\n        ObjectComponent,\n        RegionComponent,\n        StillImageComponent,\n        TextComponent,\n        TextValueAsHtmlComponent,\n        TextValueAsStringComponent,\n        TextValueAsXmlComponent,\n        TextfileValueComponent,\n        DateValueComponent,\n        IntegerValueComponent,\n        ColorValueComponent,\n        DecimalValueComponent,\n        UriValueComponent,\n        BooleanValueComponent,\n        GeometryValueComponent,\n        GeonameValueComponent,\n        IntervalValueComponent,\n        ListValueComponent,\n        LinkValueComponent,\n        ExternalResValueComponent,\n        ListViewComponent,\n        GridViewComponent,\n        TableViewComponent,\n        ResourceViewComponent,\n        CompareViewComponent,\n        GraphViewComponent,\n        PropertiesViewComponent,\n        SearchResultsComponent\n    ]\n})\nexport class KuiViewerModule {\n}\n","/*\n * Public API Surface of viewer\n */\n\n// resource viewer\nexport * from './lib/resource/';\n\n// property (gui) element\nexport * from './lib/property/';\n\n// different kind of views\nexport * from './lib/view/';\n\n// viewer module\nexport * from './lib/viewer.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {BooleanValueComponent as Éµu} from './lib/property/boolean-value/boolean-value.component';\nexport {ColorValueComponent as Éµr} from './lib/property/color-value/color-value.component';\nexport {DateValueComponent as Éµp} from './lib/property/date-value/date-value.component';\nexport {DecimalValueComponent as Éµs} from './lib/property/decimal-value/decimal-value.component';\nexport {ExternalResValueComponent as Éµba} from './lib/property/external-res-value/external-res-value.component';\nexport {GeometryValueComponent as Éµv} from './lib/property/geometry-value/geometry-value.component';\nexport {GeonameValueComponent as Éµw} from './lib/property/geoname-value/geoname-value.component';\nexport {IntegerValueComponent as Éµq} from './lib/property/integer-value/integer-value.component';\nexport {IntervalValueComponent as Éµx} from './lib/property/interval-value/interval-value.component';\nexport {LinkValueComponent as Éµz} from './lib/property/link-value/link-value.component';\nexport {ListValueComponent as Éµy} from './lib/property/list-value/list-value.component';\nexport {TextValueAsHtmlComponent as Éµl} from './lib/property/text-value/text-value-as-html/text-value-as-html.component';\nexport {TextValueAsStringComponent as Éµm} from './lib/property/text-value/text-value-as-string/text-value-as-string.component';\nexport {TextValueAsXmlComponent as Éµn} from './lib/property/text-value/text-value-as-xml/text-value-as-xml.component';\nexport {TextfileValueComponent as Éµo} from './lib/property/textfile-value/textfile-value.component';\nexport {UriValueComponent as Éµt} from './lib/property/uri-value/uri-value.component';\nexport {AnnotationComponent as Éµa} from './lib/resource/annotation/annotation.component';\nexport {AudioComponent as Éµb} from './lib/resource/audio/audio.component';\nexport {CollectionComponent as Éµc} from './lib/resource/collection/collection.component';\nexport {DddComponent as Éµd} from './lib/resource/ddd/ddd.component';\nexport {DocumentComponent as Éµe} from './lib/resource/document/document.component';\nexport {LinkObjComponent as Éµf} from './lib/resource/link-obj/link-obj.component';\nexport {MovingImageComponent as Éµg} from './lib/resource/moving-image/moving-image.component';\nexport {ObjectComponent as Éµh} from './lib/resource/object/object.component';\nexport {RegionComponent as Éµi} from './lib/resource/region/region.component';\nexport {StillImageComponent as Éµj} from './lib/resource/still-image/still-image.component';\nexport {TextComponent as Éµk} from './lib/resource/text/text.component';\nexport {CompareViewComponent as Éµbf} from './lib/view/compare-view/compare-view.component';\nexport {GraphViewComponent as Éµbg} from './lib/view/graph-view/graph-view.component';\nexport {GridViewComponent as Éµbc} from './lib/view/grid-view/grid-view.component';\nexport {KuiView as Éµbj} from './lib/view/kui-view';\nexport {ListViewComponent as Éµbb} from './lib/view/list-view/list-view.component';\nexport {PropertiesViewComponent as Éµbh} from './lib/view/properties-view/properties-view.component';\nexport {ResourceViewComponent as Éµbe} from './lib/view/resource-view/resource-view.component';\nexport {SearchResultsComponent as Éµbi} from './lib/view/search-results/search-results.component';\nexport {TableViewComponent as Éµbd} from './lib/view/table-view/table-view.component';"],"names":[],"mappings":"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"}
